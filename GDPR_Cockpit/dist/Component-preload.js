/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "gdprcockpit/Component-preload",
	"modules": {
		"gdprcockpit/controller/Dsr.controller.js": "sap.ui.define([\r\n\t\"gdprcockpit/controller/BaseController\"\r\n], function(BaseController) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gdprcockpit.controller.Dsr\", {\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gdprcockpit.view.Dsr\r\n\t\t */\r\n\t\t\tonInit: function() {\r\n\t\t\r\n\t\t\t// Also add the odata model to the view as a named model\r\n\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel(),\"oData\");\r\n\t\t\t\r\n\t\t\tthis.getRouter().getRoute(\"dsrdetail\").attachPatternMatched(this.handleRouteMatched, this);\r\n\t\t\t},\r\n\t\t/**\r\n\t\t * Check if a data source is provided in the URL. If so, bind it to the view\r\n\t\t */\r\n\t\thandleRouteMatched: function(oEvent) {\r\n\r\n\t\t\tvar id = oEvent.getParameter(\"arguments\").dsrId;\r\n\t\t\tif (id) {\r\n\t\t\t\tBaseController.DsrId = id;\r\n\t\t\t}\r\n\r\n\t\t\tif (BaseController.DsrId === \"NEW\") {\r\n\t\t\t\t// Set create/cancel button visible\r\n\t\t\t\t// Set delete button invisible\r\n\t\t\t\tthis.setButtonsVisibility(true, false);\r\n\t\t\t\t// Set properties panel expanded, selection panel collapsed and control panel hidden\r\n\t\t\t\tthis.setPanelStates(false, false);\r\n\t\t\t\tthis.setPanelVisibility(false, false, true);\r\n\t\t\t\t// Bind local json model to the view\r\n\t\t\t\tthis.bindLocalModel();\r\n\t\t\t} else if (BaseController.DsrId) {\r\n\t\t\t\tthis.bindDsrIfMDL();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Navigate back to the data subject request list\r\n\t\t */\r\n\t\tonNavBack: function(oEvent) {\r\n\t\t\tthis.getRouter().navTo(\"DSR\");\r\n\t\t},\r\n\t\t/**\r\n\t\t * Show the screen to maintain request types\r\n\t\t */\r\n\t\tonMaintainRequestTypes: function() {\r\n\t\t\tthis.showDescriptionMaintenance(\"ZGDPR_DE_DSR_TYPE\");\r\n\t\t},\r\n\t\t/**\r\n\t\t * Show the screen to maintain request statuses\r\n\t\t */\r\n\t\tonMaintainRequestStatuses: function() {\r\n\t\t\tthis.showDescriptionMaintenance(\"ZGDPR_DE_DSR_STATUS\");\r\n\t\t},\r\n\t\t/**\r\n\t\t * Cancel the creation of a new DSR\r\n\t\t */\r\n\t\tonCancelNewDsr: function(){\r\n\t\t\tthis.onNavBack();\r\n\t\t},\r\n\t\t/**\r\n\t\t * Save the new DSR\r\n\t\t */\r\n\t\tonSaveNewDsr: function(oEvent) {\r\n\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = this.getOwnerComponent().getModel();\r\n\t\t\tvar localModel = oView.getModel();\r\n\r\n\t\t\t// Read data from local model\r\n\t\t\tvar newLine = localModel.getProperty(\"/DSRSet\");\r\n\t\t\tnewLine.DsrId = \"00000\";\r\n\r\n\t\t\t// Create the entity on the backend\r\n\t\t\tvar that = this;\r\n\t\t\toModel.create(\"/DSRSet\", newLine, {\r\n\t\t\t\tsuccess: function(response) {\r\n\t\t\t\t\tthat.handleCreatedsrSuccess(response);\r\n\t\t\t\t},\r\n\t\t\t\terror: that.handleCreatedsrError\r\n\t\t\t});\r\n\r\n\t\t},\r\n\t\t/**\r\n\t\t * Handle the successfull creation of a new DSR\r\n\t\t */\r\n\t\thandleCreatedsrSuccess: function(response) {\r\n\t\t\t// Set oData model again\r\n\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel());\r\n\t\t\t// Navigate to the new source\r\n\t\t\tBaseController.DsrId = response.DsrId;\r\n\t\t\tthis.getRouter().navTo(\"dsrdetail\", {\r\n\t\t\t\tdsrId: BaseController.DsrId\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t * Handle errors at creation of a new DSR\r\n\t\t */\r\n\t\thandleCreatedsrError: function(response) {\r\n\r\n\t\t},\r\n\t\t/**\r\n\t\t * Delete a DSR identifier\r\n\t\t */\r\n\t\t onDeleteIdentifier: function(oEvent) {\r\n\t\t \t//this._deleteRow(oEvent);\r\n\t\t \t\r\n\t\t\tvar oEntity = oEvent.getParameter(\"listItem\");\r\n\t\t\tvar oContext = this._getDataContext(oEntity);\r\n\t\t\tthis._deleteEntity(oContext.path);\r\n/*\t\t\tvar oContext = oEntity.getBindingContext();\r\n\t\t\tvar oObject = oContext.getObject();\r\n\t\t\tBaseController.DsrId = oObject.DsrId;\r\n\t\t\t\r\n\t\t\tthis.getRouter().navTo(\"dsrdetail\", {dsrId: BaseController.DsrId});*/\r\n\t\t },\r\n\t\t /** \r\n\t\t  * Add a new DSR identifier\r\n\t\t  * @param oEvent\r\n\t\t  */\r\n\t\t onAddIdentifier: function(oEvent) {\r\n\t\t \tthis.getModel().create(\"/IdentitySet\", {DsrId: BaseController.DsrId, IdentifierNr: '00000', Field: '00001'}, {\r\n\t\t\t\tsuccess: function(response) {\r\n\t\t\t\t\t//that.handleCreatedsrSuccess(response);\r\n\t\t\t\t},\r\n\t\t\t\t//error: that.handleCreatedsrError\r\n\t\t\t});\r\n\t\t },\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal methods                                            */\r\n\t\t/* =========================================================== */\r\n\t\t\r\n\t\t/**\r\n\t\t *  Bind source if metadata loaded\r\n\t\t *  Check if the metadata is loaded. If yes, bind the view. If not, load the metadata and then bind the view.\r\n\t\t */\r\n\t\tbindDsrIfMDL: function() {\r\n\t\t\t// Make sure the odata model is bound to the view\r\n\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel());\r\n\t\t\t\r\n\t\t\tif (BaseController.MetadataLoaded) {\r\n\t\t\t\tthis.bindDsr();\r\n\t\t\t} else {\r\n\t\t\t\tvar that = this;\r\n\t\t\t\tthis.getModel().metadataLoaded().then(function() {\r\n\t\t\t\t\tBaseController.MetadataLoaded = true;\r\n\t\t\t\t\tthat.bindDsr();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Bind a data subject request to this view\r\n\t\t */\r\n\t\tbindDsr: function() {\r\n\t\t\tvar oModel = this.getModel();\r\n\t\t\tvar id = BaseController.DsrId;\r\n\r\n\t\t\tvar sPath = \"/\" + oModel.createKey(\"DSRSet\", {\r\n\t\t\t\tDsrId: id\r\n\t\t\t});\r\n\t\t\tthis.getView().bindElement({\r\n\t\t\t\tpath: sPath\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Show the data vault entities that correspond to this DSR\r\n\t\t\tthis.filterVault(id);\r\n\r\n\t\t\t// Expand / collapse panels\r\n\t\t\t// select: collapsed\r\n\t\t\t// properties and control: expanded\r\n\t\t\tthis.setPanelStates(true, true);\r\n\t\t\tthis.setPanelVisibility(true, true, false);\r\n\r\n\t\t\t// Show delete button\r\n\t\t\tthis.setButtonsVisibility(false, true);\r\n\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Show buttons to save / cancel the new source creation\r\n\t\t */\r\n\t\tsetButtonsVisibility: function(create, deleteButton) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oSave = oView.byId(\"saveNew\");\r\n\t\t\tvar oCancel = oView.byId(\"cancelNew\");\r\n\t\t\tvar oDelete = oView.byId(\"deleteDsr\");\r\n\t\t\toSave.setVisible(create);\r\n\t\t\toCancel.setVisible(create);\r\n\t\t\toDelete.setVisible(deleteButton);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Set the collapsed or expanded state for the 2 panels of this view\r\n\t\t */\r\n\t\tsetPanelStates: function(identity, vault) {\r\n\t\t\tvar oIdentity = this.getView().byId(\"identity\");\r\n\t\t\tvar oVault = this.getView().byId(\"vaultresults\");\r\n\r\n\t\t\toIdentity.setExpanded(identity);\r\n\t\t\toVault.setExpanded(vault);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Set the collapsed or expanded state for the 2 panels of this view\r\n\t\t */\r\n\t\tsetPanelVisibility: function(identity, vault, singleIdentity) {\r\n\t\t\tvar oIdentity = this.getView().byId(\"identity\");\r\n\t\t\tvar oVault = this.getView().byId(\"vaultresults\");\r\n\t\t\tvar oSingle = this.getView().byId(\"singleIdentity\");\r\n\r\n\t\t\toIdentity.setVisible(identity);\r\n\t\t\toVault.setVisible(vault);\r\n\t\t\toSingle.setVisible(singleIdentity); \r\n\t\t},\r\n\t\t/**\r\n\t\t * Bind a local json model to the view to store a new DSR before pushing it to the backend\r\n\t\t */\r\n\t\tbindLocalModel: function() {\r\n\r\n\t\t\tvar localModel = new sap.ui.model.json.JSONModel({\r\n\t\t\t\tDSRSet: {\r\n\t\t\t\t\t\"DsrId\": \"New request\",\r\n\t\t\t\t\t\"RequestType\": \"00001\",\r\n\t\t\t\t\t\"Field\": \"00001\",\r\n\t\t\t\t\t\"CreationDate\": new Date()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar oView = this.getView();\r\n\r\n\t\t\toView.setModel(localModel);\r\n\t\t\toView.bindElement(\"/DSRSet\");\r\n\r\n\t\t},\r\n\t\t/** \r\n\t\t * Filter the data vault\r\n\t\t * @param DsrId: the data subject request ID for which to show the data vault contents\r\n\t\t */\r\n\t\tfilterVault: function(DsrId){\r\n\t\t\t// Create the filter\r\n\t\t\tvar oFilters = [];\r\n\t\t\toFilters.push( new sap.ui.model.Filter(\"DsrId\",\"EQ\",DsrId) );\r\n\t\t\t\r\n\t\t\t// Apply the filter\r\n\t\t \tvar oListController = this.getView().byId(\"vaultList\").getController();\r\n\t\t \toListController.applyFilter(oFilters);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t/* =========================================================== */\r\n\t\t/* Unused livecycle methods                                    */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gdprcockpit.view.Dsr\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gdprcockpit.view.Dsr\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gdprcockpit.view.Dsr\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gdprcockpit/Component.js": "sap.ui.define([\n\t\t\"sap/ui/core/UIComponent\",\n\t\t\"sap/ui/Device\",\n\t\t\"gdprcockpit/model/models\",\n\t\t\"gdprcockpit/controller/ListSelector\",\n\t\t\"gdprcockpit/controller/ErrorHandler\"\n\t], function (UIComponent, Device, models, ListSelector, ErrorHandler) {\n\t\t\"use strict\";\n\n\t\treturn UIComponent.extend(\"gdprcockpit.Component\", {\n\n\t\t\tmetadata : {\n\t\t\t\tmanifest : \"json\",\n\t\t\t\tincludes: [\"css/navigation.css\", \"css/global.css\"],\n\t\t\t\tconfig: {\n\t\t\t\t\tfullWidth:true\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t\t * In this method, the device models are set and the router is initialized.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tinit : function () {\n\t\t\t\tthis.oListSelector = new ListSelector();\n\n\t\t\t\t// set the device model\n\t\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\t\t\t// call the base component's init function and create the App view\n\t\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\t\t\t\t\n\t\t\t\t// Don't set the errorhandler. Use a message manager instead\n\t\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\t\t\t\t// set message model\n\t\t\t\t//this.setModel(sap.ui.getCore().getMessageManager().getMessageModel(), \"message\");\n\n\t\t\t\t// create the views based on the url/hash\n\t\t\t\tthis.getRouter().initialize();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is destroyed by UI5 automatically.\n\t\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tdestroy : function () {\n\t\t\t\tthis._oErrorHandler.destroy();\n\t\t\t\t// call the base component's destroy function\n\t\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t\t * @public\n\t\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t\t */\n\t\t\tgetContentDensityClass : function() {\n\t\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this._sContentDensityClass;\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"gdprcockpit/controller/Master.controller.js": "/*global history */\nsap.ui.define([\n\t\t\"gdprcockpit/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"sap/ui/model/FilterOperator\",\n\t\t\"sap/m/GroupHeaderListItem\",\n\t\t\"sap/ui/Device\",\n\t\t\"gdprcockpit/model/formatter\"\n\t], function (BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"gdprcockpit.controller.Master\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonInit : function () {\n\t\t\t\t// Control state model\n\t\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\t\toViewModel = this._createViewModel(),\n\t\t\t\t\t// Put down master list's original value for busy indicator delay,\n\t\t\t\t\t// so it can be restored later on. Busy handling on the master list is\n\t\t\t\t\t// taken care of by the master list itself.\n\t\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\n\n\n\t\t\t\tthis._oList = oList;\n\t\t\t\t// keeps the filter and search state\n\t\t\t\tthis._oListFilterState = {\n\t\t\t\t\taFilter : [],\n\t\t\t\t\taSearch : []\n\t\t\t\t};\n\n\t\t\t\tthis.setModel(oViewModel, \"masterView\");\n\t\t\t\t// Make sure, busy indication is showing immediately so there is no\n\t\t\t\t// break after the busy indication for loading the view's meta data is\n\t\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\n\t\t\t\toList.attachEventOnce(\"updateFinished\", function(){\n\t\t\t\t\t// Restore original busy indicator delay for the list\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t});\n\n\t\t\t\tthis.getView().addEventDelegate({\n\t\t\t\t\tonBeforeFirstShow: function () {\n\t\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\n\t\t\t\t\t}.bind(this)\n\t\t\t\t});\n\n\t\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\n\t\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * After list data is available, this handler method updates the\n\t\t\t * master list counter and hides the pull to refresh control, if\n\t\t\t * necessary.\n\t\t\t * @param {sap.ui.base.Event} oEvent the update finished event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonUpdateFinished : function (oEvent) {\n\t\t\t\t// update the master list object counter after new data is loaded\n\t\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the master search field. Applies current\n\t\t\t * filter value and triggers a new search. If the search field's\n\t\t\t * 'refresh' button has been pressed, no new search is triggered\n\t\t\t * and the list binding is refresh instead.\n\t\t\t * @param {sap.ui.base.Event} oEvent the search event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonSearch : function (oEvent) {\n\t\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t\t// Search field's 'refresh' button has been pressed.\n\t\t\t\t\t// This is visible if you select any master list item.\n\t\t\t\t\t// In this case no new search is triggered, we only\n\t\t\t\t\t// refresh the list binding.\n\t\t\t\t\tthis.onRefresh();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\t\tif (sQuery) {\n\t\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Text\", FilterOperator.Contains, sQuery)];\n\t\t\t\t} else {\n\t\t\t\t\tthis._oListFilterState.aSearch = [];\n\t\t\t\t}\n\t\t\t\tthis._applyFilterSearch();\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for refresh event. Keeps filter, sort\n\t\t\t * and group settings and refreshes the list binding.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonRefresh : function () {\n\t\t\t\tthis._oList.getBinding(\"items\").refresh();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the navigation selection event\n\t\t\t * @param {sap.ui.base.Event} oEvent the navigation selectionChange event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavigationSelect : function(oEvent){\n\t\t\t\tvar item = oEvent.getParameter('listItem');\n\t\t\t\tvar sTarget = item.data(\"key\");\n\t\t\t\t\n\t\t\t\tswitch (sTarget) { \n\t\t\t\t\tcase \"toggle\":\n\t\t\t\t\t\tthis.onToggleSideBar(oEvent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.getRouter().navTo(sTarget);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\t/*\n\t\t\t* Toggle the sidebar\n\t\t\t*/\n\t\t\tonToggleSideBar: function(oEvent) {\n\t\t\t\tvar oView = this.getView();\n\t\t\t\t/*var sideNavigation = oView.byId('sideNavigation');\n\t\t\t\tvar expanded = !sideNavigation.getExpanded();\n\t\t\t\tsideNavigation.setExpanded(expanded);*/\n\t\t\t\t\n\t\t\t\tvar splitContainerMaster = oView.getParent();\n\t\t\t\tsplitContainerMaster.toggleStyleClass(\"sapMSplitContainerMasterCollapsed\");\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\n\t\t\t * If there was an object selected in the master list, that selection is removed.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonBypassed : function () {\n\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for navigating back.\n\t\t\t * We navigate back in the browser historz\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\thistory.go(-1);\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* begin: internal methods                                     */\n\t\t\t/* =========================================================== */\n\n\n\t\t\t_createViewModel : function() {\n\t\t\t\treturn new JSONModel({\n\t\t\t\t\tisFilterBarVisible: false,\n\t\t\t\t\tfilterBarLabel: \"\",\n\t\t\t\t\tdelay: 0,\n\t\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\n\t\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\n\t\t\t\t\tsortBy: \"Text\",\n\t\t\t\t\tgroupBy: \"None\"\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * If the master route was hit (empty hash) we have to set\n\t\t\t * the hash to to the first item in the list as soon as the\n\t\t\t * listLoading is done and the first item in the list is known\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onMasterMatched :  function() {\n\t\t\t\tthis.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(\n\t\t\t\t\tfunction (mParams) {\n\t\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar sObjectId = mParams.firstListitem.getBindingContext().getProperty(\"Target\");\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {objectId : sObjectId}, true);\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tfunction (mParams) {\n\t\t\t\t\t\tif (mParams.error) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t\t}.bind(this)\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows the selected item on the detail page\n\t\t\t * On phones a additional history entry is created\n\t\t\t * @param {sap.m.ObjectListItem} oItem selected Item\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showDetail : function (oItem) {\n\t\t\t\tvar bReplace = !Device.system.phone;\n\t\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\t\tobjectId : oItem.getBindingContext().getProperty(\"Target\")\n\t\t\t\t}, bReplace);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the item count on the master list header\n\t\t\t * @param {integer} iTotalItems the total number of items in the list\n\t\t\t * @private\n\t\t\t */\n\t\t\t_updateListItemCount : function (iTotalItems) {\n\t\t\t\tvar sTitle;\n\t\t\t\t// only update the counter if the length is final\n\t\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\n\t\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Internal helper method to apply both filter and search state together on the list binding\n\t\t\t * @private\n\t\t\t */\n\t\t\t_applyFilterSearch : function () {\n\t\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\n\t\t\t\t\toViewModel = this.getModel(\"masterView\");\n\t\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\t\tif (aFilters.length !== 0) {\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\n\t\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\n\t\t\t\t\t// only reset the no data text to default when no new search was triggered\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Internal helper method to apply both group and sort state together on the list binding\n\t\t\t * @param {sap.ui.model.Sorter[]} aSorters an array of sorters\n\t\t\t * @private\n\t\t\t */\n\t\t\t_applyGroupSort : function (aSorters) {\n\t\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\n\t\t\t * @param {string} sFilterBarText the selected filter value\n\t\t\t * @private\n\t\t\t */\n\t\t\t_updateFilterBar : function (sFilterBarText) {\n\t\t\t\tvar oViewModel = this.getModel(\"masterView\");\n\t\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\n\t\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"gdprcockpit/controller/BaseController.js": "/*global history */\nsap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/ui/core/routing/History\",\n\t\t\"sap/ui/model/Filter\"\n\t], function (Controller, MessageToast, History,Filter) {\n\t\t\"use strict\";\n\n\t\treturn Controller.extend(\"gdprcockpit.controller.BaseController\", {\n\t\t\t/**\n\t\t\t * Convenience method for accessing the router in every controller of the application.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t\t */\n\t\t\tgetRouter : function () {\n\t\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the view model by name in every controller of the application.\n\t\t\t * @public\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t\t */\n\t\t\tgetModel : function (sName) {\n\t\t\t\treturn this.getView().getModel(sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for setting the view model in every controller of the application.\n\t\t\t * @public\n\t\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t\t */\n\t\t\tsetModel : function (oModel, sName) {\n\t\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the resource bundle.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t\t */\n\t\t\tgetResourceBundle : function () {\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for navigating back.\n\t\t\t * It there is a history entry we go one step back in the browser history\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Handle changes in data fields\n\t\t\t */\n\t\t\tonChange: function () {\n\t\t\t\tthis.save();\n\t\t\t},\n\t\t\t/**\n\t\t\t * Handle the cancelling of a value help\n\t\t\t */\n\t\t\thandleValueHelpCancel: function(oEvent) {\n\t\t\t\t// Do nothing for the moment\n\t\t\t},\n\t\t\t/**\n\t\t\t * Filter the user value help using the search field\n\t\t\t */\n\t\t\thandleUserFilter: function (oEvent) {\n\t\t\t\tvar sSearch = oEvent.getParameter(\"value\");\n\t\t\t\tvar oSearchFilters = [];\n\t\t\t\toSearchFilters.push( new Filter(\"Field\", sap.ui.model.FilterOperator.EQ, \"XUBNAME\"));\n\t\t\t\toSearchFilters.push( new Filter(\"Filter1\", sap.ui.model.FilterOperator.Contains, sSearch) );\n\t\t\t\toSearchFilters.push( new Filter(\"Filter2\", sap.ui.model.FilterOperator.Contains, sSearch) );\n\t\t\t\toSearchFilters.push( new Filter(\"Filter3\", sap.ui.model.FilterOperator.Contains, sSearch) );\n\t\t\t\toSearchFilters.push( new Filter(\"Filter4\", sap.ui.model.FilterOperator.Contains, sSearch) );\n\t\t\t\tvar oBinding = oEvent.getSource().getBinding(\"items\");\n\t\t\t\toBinding.filter(oSearchFilters);\n\t\t\t},\n\t\t\t\n\t\t\t\n\t\t\t/**\n\t\t\t * Open a popup for maintaining object descriptions of a given object type\n\t\t\t */\n\t\t\tshowDescriptionMaintenance: function(ObjectType) {\n\t\t\t\t\n\t\t\t\tif(ObjectType) {\n\t\t\t\t\tthis.getRouter().navTo(\"descriptions\", {objectType: ObjectType});\n\t\t\t\t}\n\t\t\t},\n\t\t/* =========================================================== */\n\t\t/* Internal methods                                            */\n\t\t/* =========================================================== */\n\t\t\t/**\n\t\t\t * Save the changes to the backend\n\t\t\t */\n\t\t\tsave: function() {\n\t\t\t \tvar oBundle = this.getView().getModel(\"i18n\").getResourceBundle();\n\t\t\t \tvar oModel = this.getModel();\n\t\t\t\toModel.submitChanges(\n\t\t\t \t\t{\n\t\t\t \t\t\tsuccess: function(oData,response) {\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: function(e) {\n\t\t\t\t\t\t\tMessageToast.show(oBundle.getText(\"submitError\"));\n\t\t\t\t\t\t}\n\t\t\t \t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Delete a table row\n\t\t\t */\n\t\t\t_deleteRow: function(oEvent){\n\t\t\t\tvar oRow = this._getTableItemContext(oEvent);\n\t\t\t\tvar sPath = oRow.path;\n\t\t\t\tthis._deleteEntity(sPath);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Get the context of a table item\n\t\t\t */\n\t\t\t_getTableItemContext: function(oEvent){\n\t\t\t\tvar oButton = oEvent.getSource();\n\t\t\t \tvar oParent = this._getParentItem(oButton);\n\t\t\t \treturn this._getDataContext(oParent);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Get an item's parent\n\t\t\t */\n\t\t\t_getParentItem: function(oElement){\n\t\t\t\tvar parent = oElement.getParent();\n\t\t\t\tvar parentItem;\n\t\t\t\t\n\t\t\t\twhile (parentItem == undefined){\n\t\t\t\t\tif (parent instanceof sap.m.ListItemBase) {\n\t\t\t\t\t\tparentItem = parent;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparent = parent.getParent();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn parentItem;\n\t\t\t},\n\t\t\t/**\n\t\t\t * Get the context of an item\n\t\t\t */\n\t\t\t_getDataContext: function(oItem){\n\t\t\t    var sPath = oItem.getBindingContextPath();\n\t\t\t    var oModel = this.getView().getModel();\n\t\t\t    return {\n\t\t\t      path : sPath,\n\t\t\t      data : oModel.getObject(sPath)\n\t\t\t    };\n\t\t\t},\n\t\t\t/**\n\t\t\t * Delete an entity with a given path\n\t\t\t */\n\t\t\t _deleteEntity: function(sPath) {\n\t\t\t \tvar oModel = this.getView().getModel();\n\t\t\t \tvar oBundle = this.getView().getModel(\"i18n\").getResourceBundle();\n\t\t\t \t\n\t\t\t \toModel.remove(sPath, {\n\t\t\t\t\tsuccess: function(data) {\n\t\t\t\t\tMessageToast.show(oBundle.getText(\"deleteSuccess\"));\n\t\t\t\t},\n\t\t\t\t\terror: function(e) {\n\t\t\t\t\tMessageToast.show(oBundle.getText(\"deleteError\"));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t },\n\t\t\t /**\n\t\t\t  * Get the parent view of an object\n\t\t\t  */\n\t\t\t_getParentView: function(oObject) {\n\t\t\t\tvar parent = oObject.getParent();\n\t\t\t\tvar parentView;\n\t\t\t\t\n\t\t\t\twhile (parentView == undefined){\n\t\t\t\t\tif (parent instanceof sap.ui.core.mvc.View) {\n\t\t\t\t\t\tparentView = parent;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparent = parent.getParent();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn parentView;\n\t\t\t},\n\t\t\t \n\t\t/* =========================================================== */\n\t\t/* Show messages\t                                           */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * Handle the button press to show the messages\n\t\t */\n\t\t_onShowMessages: function (oEvent) {\n\t\t\tthis._getMessagelistPopover().openBy(oEvent.getSource());\n\t\t},\n\t\t/**\n\t\t * Get the message list popover instance\n\t\t */\n\t\t_getMessagelistPopover: function () {\n\t\t\t// create popover (singleton)\n\t\t\tif (!this._oMessagelistPopover) {\n\t\t\t\tthis._oMessagelistPopover = sap.ui.xmlfragment(\"gdprcockpit.view.MessagePopover\", this);\n\t\t\t\tthis.getView().addDependent(this._oMessagelistPopover);\n\t\t\t}\n\t\t\treturn this._oMessagelistPopover;\n\t\t},\n\t\t\n\t\t\n\t\t/* =========================================================== */\n\t\t/* Internal attributes                                         */\n\t\t/* =========================================================== */\n\t\t\tDescriptionSubView: null,\n\t\t\tDescriptionDialog: null\n\n\t\t});\n\n\t}\n);",
		"gdprcockpit/controller/App.controller.js": "sap.ui.define([\n\t\t\"gdprcockpit/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\"\n\t], function (BaseController, JSONModel) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"gdprcockpit.controller.App\", {\n\n\t\t\tonInit : function () {\n\t\t\t\tvar oViewModel,\n\t\t\t\t\tfnSetAppNotBusy,\n\t\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\t\toViewModel = new JSONModel({\n\t\t\t\t\tbusy : true,\n\t\t\t\t\tdelay : 0\n\t\t\t\t});\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t};\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\n\t\t\t\t\t\t.then(fnSetAppNotBusy);\n\n\t\t\t\t// Makes sure that master view is hidden in split app\n\t\t\t\t// after a new list entry has been selected.\n\t\t\t\toListSelector.attachListSelectionChange(function () {\n\t\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\n\t\t\t\t}, this);\n\n\t\t\t\t// apply content density mode to root view\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"gdprcockpit/controller/DataSources.controller.js": "sap.ui.define([\n\t\"gdprcockpit/controller/BaseController\",\n\t\"sap/m/MessageToast\"\n], function(BaseController, MessageToast) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"gdprcockpit.controller.DataSources\", {\n\n\t\t/* =========================================================== */\n\t\t/* Event handlers                                              */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * This method is executed once when initialising the controller\n\t\t */\n\t\tonInit: function() {\n\t\t\t// Also add the odata model to the view as a named model\n\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel(),\"oData\");\n\t\t\t\n\t\t\tthis.getRouter().getRoute(\"SOURCE\").attachPatternMatched(this.handleRouteMatched, this);\n\t\t},\n\t\t/**\n\t\t * Check if a data source is provided in the URL. If so, bind it to the view\n\t\t */\n\t\thandleRouteMatched: function(oEvent) {\n\n\t\t\tvar id = oEvent.getParameter(\"arguments\").id;\n\t\t\tif (id) {\n\t\t\t\tBaseController.SourceId = id;\n\t\t\t} else {\n\t\t\t\t// Get value from the source selector dropdown\n\t\t\t\tid = this.getView().byId(\"sourceSelector\").getSelectedKey();\n\t\t\t\tif (id) {\n\t\t\t\t\tBaseController.SourceId = id;\n\t\t\t\t} else {\n\t\t\t\t\tBaseController.SourceId = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (BaseController.SourceId === \"NEW\") {\n\t\t\t\t// Set create/cancel button visible\n\t\t\t\t// Set delete button invisible\n\t\t\t\tthis.setCreateButtonsVisibility(true, false);\n\t\t\t\t// Set properties panel expanded, selection panel collapsed and control panel hidden\n\t\t\t\tthis.setPanelStates(false, true, false);\n\t\t\t\tthis.setPanelVisibility(false, true, false);\n\t\t\t\t// Bind local json model to the view\n\t\t\t\tthis.bindLocalModel();\n\t\t\t} else if (BaseController.SourceId) {\n\t\t\t\tthis.bindSourceIfMDL();\n\t\t\t} else {\n\t\t\t\t// If no source is selected yet, show the source selection panel (hide the other panels)\n\t\t\t\tthis.setPanelStates(true, false, false);\n\t\t\t\tthis.setPanelVisibility(true, false, false);\n\t\t\t\t// Make create/cancel/delete buttons invisible\n\t\t\t\tthis.setCreateButtonsVisibility(false, false);\n\t\t\t\t// Make sure the oData model is bound to the view\n\t\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel());\n\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle the selection of a data source\n\t\t */\n\t\tonSelectSource: function(oEvent) {\n\t\t\tvar oItem = oEvent.getParameter(\"selectedItem\");\n\t\t\tif (oItem) {\n\t\t\t\tBaseController.SourceId = oItem.getProperty(\"key\");\n\t\t\t\tthis.getRouter().navTo(\"SOURCE\", {\n\t\t\t\t\tid: BaseController.SourceId\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Filter the list of sources on the source type\n\t\t */\n\t\tonSelectSourceType: function(oEvent) {\n\t\t\tvar oItem = oEvent.getParameter(\"selectedItem\");\n\t\t\tif (oItem) {\n\t\t\t\tvar srcType = oItem.getProperty(\"key\");\n\t\t\t\tvar oFilters = [new sap.ui.model.Filter(\"Type\", \"EQ\", srcType)];\n\t\t\t\tvar oSourceSelector = this.getView().byId(\"sourceSelector\");\n\t\t\t\tvar oBinding = oSourceSelector.getBinding(\"items\");\n\t\t\t\toBinding.filter(oFilters);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle the creation of a new data source \n\t\t */\n\t\tonAddDataSource: function(oEvent) {\n\n\t\t\tvar oView = this.getView();\n\n\t\t\t// Set flag to indicate that a new source will be created\n\t\t\tBaseController.CreateNew = true;\n\n\t\t\t// Update hash\n\t\t\tthis.getRouter().navTo(\"SOURCE\", {\n\t\t\tid: \"NEW\"\n\t\t\t});\n\n\t\t},\n\t\t/**\n\t\t * Handle the successfull creation of a new source\n\t\t */\n\t\thandleCreatesourceSuccess: function(response) {\n\t\t\t// Set oData model again\n\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel());\n\t\t\t// Navigate to the new source\n\t\t\tBaseController.SourceId = response.SrcId;\n\t\t\tthis.getRouter().navTo(\"SOURCE\", {\n\t\t\t\tid: BaseController.SourceId\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Handle the successfull creation of a new source\n\t\t */\n\t\thandleCreatesourceError: function(response) {\n\n\t\t},\n\t\t/**\n\t\t * Show the screen to maintain source types\n\t\t */\n\t\tonMaintainSourceTypes: function() {\n\t\t\tthis.showDescriptionMaintenance(\"ZGDPR_DE_SRC_TYPE_ID\");\n\t\t},\n\t\t/**\n\t\t * Delete a data source\n\t\t */\n\t\tonDeleteSource: function(oEvent) {\n\t\t\tvar oModel = this.getModel();\n\t\t\tvar id = BaseController.SourceId;\n\t\t\tvar sPath = \"/\" + oModel.createKey(\"SourceSet\", {\n\t\t\t\tSrcId: id\n\t\t\t});\n\t\t\tthis._deleteEntity(sPath);\n\n\t\t\tthis.getRouter().navTo(\"SOURCE\");\n\n\t\t},\n\t\t/**\n\t\t * Save the new source\n\t\t */\n\t\tonSaveNewSource: function(oEvent) {\n\n\t\t\tvar oView = this.getView();\n\t\t\tvar oModel = this.getOwnerComponent().getModel();\n\t\t\tvar localModel = oView.getModel();\n\n\t\t\t// Read data from local model\n\t\t\tvar newLine = localModel.getProperty(\"/SourceSet\");\n\t\t\tnewLine.SrcId = \"00000\";\n\n\t\t\t// Create the entity on the backend\n\t\t\tvar that = this;\n\t\t\toModel.create(\"/SourceSet\", newLine, {\n\t\t\t\tsuccess: function(response) {\n\t\t\t\t\tthat.handleCreatesourceSuccess(response);\n\t\t\t\t},\n\t\t\t\terror: that.handleCreatesourceError\n\t\t\t});\n\n\t\t},\n\t\t/**\n\t\t * Cancel the creation of a new source\n\t\t */\n\t\tonCancelNewSource: function(oEvent) {\n\t\t\tBaseController.CreateNew = false;\n\t\t\t\n\t\t\tthis.getRouter().navTo(\"SOURCE\");\n\t\t},\n\t\t/**\n\t\t * Submit each change to the backend as it is entered\n\t\t * Don't do this for new entities, they need to be saved manually\n\t\t */\n\t\tonChange: function(oEvent) {\n\t\t\tif (!BaseController.CreateNew) {\n\t\t\t\tthis.save();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Event handler for pressing ENTER on an input field\n\t\t */\n\t\tonSubmit: function(oEvent) {\n\t\t\tif (BaseController.CreateNew) {\n\t\t\t\tthis.onSaveNewSource(oEvent);\n\t\t\t}\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Internal methods                                            */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t *  Bind source if metadata loaded\n\t\t *  Check if the metadata is loaded. If yes, bind the view. If not, load the metadata and then bind the view.\n\t\t */\n\t\tbindSourceIfMDL: function() {\n\t\t\t// Make sure the odata model is bound to the view\n\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel());\n\t\t\t\n\t\t\tif (BaseController.MetadataLoaded) {\n\t\t\t\tthis.bindSource();\n\t\t\t} else {\n\t\t\t\tvar that = this;\n\t\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\t\tBaseController.MetadataLoaded = true;\n\t\t\t\t\tthat.bindSource();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Bind a source to this view\n\t\t */\n\t\tbindSource: function() {\n\t\t\tvar oModel = this.getModel();\n\t\t\tvar id = BaseController.SourceId;\n\n\t\t\tvar sPath = \"/\" + oModel.createKey(\"SourceSet\", {\n\t\t\t\tSrcId: id\n\t\t\t});\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sPath\n\t\t\t});\n\n\t\t\t// Expand / collapse panels\n\t\t\t// select: collapsed\n\t\t\t// properties and control: expanded\n\t\t\tthis.setPanelStates(false, true, true);\n\t\t\tthis.setPanelVisibility(true, true, true);\n\n\t\t\t// Update the source selector dropdown\n\t\t\tvar oSelector = this.getView().byId(\"sourceSelector\");\n\t\t\toSelector.setSelectedKey(BaseController.SourceId);\n\n\t\t\t// Show delete button\n\t\t\tthis.setCreateButtonsVisibility(false, true);\n\n\t\t\t// If the \"create new source\" flag is still set but the has now selected an existing source, remove the flag\n\t\t\tBaseController.CreateNew = false;\n\t\t},\n\n\t\t/**\n\t\t * Show buttons to save / cancel the new source creation\n\t\t */\n\t\tsetCreateButtonsVisibility: function(create, deleteButton) {\n\t\t\tvar oView = this.getView();\n\t\t\tvar oSave = oView.byId(\"saveNew\");\n\t\t\tvar oCancel = oView.byId(\"cancelNew\");\n\t\t\tvar oDelete = oView.byId(\"deleteSource\");\n\t\t\toSave.setVisible(create);\n\t\t\toCancel.setVisible(create);\n\t\t\toDelete.setVisible(deleteButton);\n\t\t},\n\t\t/**\n\t\t * Set the collapsed or expanded state for the 3 panels of this view\n\t\t */\n\t\tsetPanelStates: function(select, properties, control) {\n\t\t\tvar oSelect = this.getView().byId(\"select\");\n\t\t\tvar oProperties = this.getView().byId(\"properties\");\n\t\t\tvar oControl = this.getView().byId(\"control\");\n\n\t\t\toSelect.setExpanded(select);\n\t\t\toProperties.setExpanded(properties);\n\t\t\toControl.setExpanded(control);\n\t\t},\n\t\t/**\n\t\t * Set the collapsed or expanded state for the 3 panels of this view\n\t\t */\n\t\tsetPanelVisibility: function(select, properties, control) {\n\t\t\tvar oSelect = this.getView().byId(\"select\");\n\t\t\tvar oProperties = this.getView().byId(\"properties\");\n\t\t\tvar oControl = this.getView().byId(\"control\");\n\n\t\t\toSelect.setVisible(select);\n\t\t\toProperties.setVisible(properties);\n\t\t\toControl.setVisible(control);\n\t\t},\n\t\t/**\n\t\t * Bind a local json model to the view to store a new source before pushing it to the backend\n\t\t */\n\t\tbindLocalModel: function() {\n\n\t\t\tvar localModel = new sap.ui.model.json.JSONModel({\n\t\t\t\tSourceSet: {\n\t\t\t\t\t\"SrcId\": \"New Source\",\n\t\t\t\t\t\"Description\": \"New Source\"\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar oView = this.getView();\n\n\t\t\toView.setModel(localModel);\n\t\t\toView.bindElement(\"/SourceSet\");\n\n\t\t}\n\n\t});\n}, /* bExport= */ true);",
		"gdprcockpit/controller/DataFieldDetail.controller.js": "sap.ui.define([\r\n\t\"gdprcockpit/controller/BaseController\"\r\n], function(BaseController) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gdprcockpit.controller.DataFieldDetail\", {\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gdprcockpit.view.DataFieldDetail\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\t// Also add the odata model to the view as a named model\r\n\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel(),\"oData\");\r\n\t\t\t\r\n\t\t\tthis.getRouter().getRoute(\"fieldDetail\").attachPatternMatched(this.handleRouteMatched, this);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if a data source is provided in the URL. If so, bind it to the view\r\n\t\t */\r\n\t\thandleRouteMatched: function(oEvent) {\r\n\r\n\t\t\tvar id = oEvent.getParameter(\"arguments\").id;\r\n\t\t\tif ( id === \"NEW\") {\r\n\t\t\t\tBaseController.FieldId = null;\r\n\t\t\t\t\r\n\t\t\t\t// Set create/cancel button visible\r\n\t\t\t\t// Set delete button invisible\r\n\t\t \t\tthis.setCreateButtonsVisibility(true);\r\n\t\t\t\t// Bind local json model to the view\r\n\t\t\t\tthis.bindLocalModel();\r\n\t\t\t}\r\n\t\t\telse if (id) {\r\n\t\t\t\tBaseController.FieldId = id;\r\n\t\t\t\tthis.bindFieldIfMDL();\r\n\t\t\t\t// Set create/cancel button invisible\r\n\t\t\t\t// Set delete button visible\r\n\t\t \t\tthis.setCreateButtonsVisibility(false);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\t/**\r\n\t\t * Navigate back to the data field list\r\n\t\t */\r\n\t\tonNavBack: function(oEvent) {\r\n\t\t\tthis.getRouter().navTo(\"FIELD\");\r\n\t\t},\r\n\t\t/**\r\n\t\t * Delete a field\r\n\t\t */\r\n\t\tonDeleteField: function(oEvent) {\r\n\t\t   \tvar oModel = this.getModel();\r\n\t\t \tvar id =  BaseController.FieldId;\r\n\t\t \tvar sPath = \"/\" + oModel.createKey(\"FieldSet\", {\r\n\t\t\t\t\t\t\tId: id\r\n\t\t\t\t});\r\n\t\t\tthis._deleteEntity(sPath);\r\n\t\t\tthis.onNavBack();\r\n\t\t},\r\n\t\t/**\r\n\t\t * Save the new field\r\n\t\t */\r\n\t\tonSaveNewField: function (oEvent) {\r\n\t    \t\r\n\t    \tvar oView = this.getView();\r\n\t    \tvar oModel = this.getOwnerComponent().getModel();\r\n\t    \tvar localModel = oView.getModel();\r\n\t    \t\r\n\t    \t// Read data from local model\r\n\t    \tvar newLine = localModel.getProperty(\"/FieldSet\");\r\n\t    \tnewLine.Id = \"00000\";\r\n\t\t \t\r\n\t\t\tvar that = this;\r\n\t\t\toModel.create(\"/FieldSet\", newLine,\r\n\t\t\t{\r\n\t\t\t\tsuccess: function(response) {\r\n\t\t\t\t\tthat.handleCreatefieldSuccess(response);\r\n\t\t\t\t},\r\n\t\t\t\terror: that.handleCreatefieldError\r\n\t\t\t});\r\n\t\t\t\r\n\t    },\r\n\t\t/**\r\n\t\t * Cancel the creation of a new field\r\n\t\t */\r\n\t    onCancelNewField: function (oEvent) {\r\n\t    \t\r\n\t\t\t// Bind the oData model to the view again\r\n\t    \t// Set oData model again\r\n\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel());\r\n\t\t\t\r\n\t\t\t// Navigate to the fields overview\r\n\t    \tthis.onNavBack(oEvent);\r\n\t    \t\r\n\t    },\r\n\t    /**\r\n\t     * Submit each change to the backend as it is entered\r\n\t     * Don't do this for new entities, they need to be saved manually\r\n\t     */\r\n\t     onChange: function(oEvent) {\r\n\t     \tif (BaseController.FieldId) {\r\n\t     \t\tthis.save();\r\n\t     \t}\r\n\t     },\r\n\t\t /**\r\n\t\t  * Handle the successfull creation of a new field\r\n\t\t  */\r\n\t\t  handleCreatefieldSuccess: function (response) {\r\n\t    \t// Set oData model again\r\n\t\t\tthis.getView().setModel(this.getOwnerComponent().getModel());\r\n\t\t\t\r\n\t\t  \tBaseController.FieldId = response.Id;\r\n\t\t  \tthis.getRouter().navTo(\"fieldDetail\", {id: BaseController.FieldId});\r\n\t\t  },\r\n\t\t /**\r\n\t\t  * Handle errors when creating a new field\r\n\t\t  */\r\n\t\t  handleCreatefieldError: function (response) {\r\n\t\t  \t\r\n\t\t  },\r\n\t\t/**\r\n\t\t * Event handler for pressing ENTER on an input field\r\n\t\t */\r\n\t\tonSubmit: function(oEvent) {\r\n\t\t\tif (!BaseController.FieldId) {\r\n\t\t\t\tthis.onSaveNewField(oEvent);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal methods                                            */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t *  Bind field if metadata loaded\r\n\t\t *  Check if the metadata is loaded. If yes, bind the view. If not, load the metadata and then bind the view.\r\n\t\t */\r\n\t\t bindFieldIfMDL: function() {\r\n\t\t \t\r\n\t\t\t// Make sure the odata model is bound to the view\r\n\t \t\tvar oModel = this.getOwnerComponent().getModel();\r\n\t \t\tthis.getView().setModel(oModel);\r\n\t \t\t\r\n\t\t \tif (BaseController.MetadataLoaded) {\r\n\t\t \t\tthis.bindField();\r\n\t\t \t} else {\r\n\t\t \t\tvar that = this;\r\n\t\t \t\toModel.metadataLoaded().then( function() {\r\n\t\t \t\t\tBaseController.MetadataLoaded = true;\r\n\t\t \t\t\tthat.bindField();\r\n\t\t \t\t});\r\n\t\t \t}\r\n\t\t },\r\n\t\t /**\r\n\t\t  * Bind a field to this view\r\n\t\t  */\r\n\t\t bindField: function() {\r\n\t\t \tvar oModel = this.getModel();\r\n\t\t\r\n\t\t \tvar sPath = \"/\" + oModel.createKey(\"FieldSet\", {\r\n\t\t\t\t\t\t\tId: BaseController.FieldId\r\n\t\t\t\t});\r\n\t\t\tthis.getView().bindElement({path: sPath});\r\n\t\t },\r\n\t\t\r\n\t\t/**\r\n\t\t* Show buttons to save / cancel the new field creation\r\n\t\t*/\r\n\t\tsetCreateButtonsVisibility: function(create) {\r\n\t\t  var oView = this.getView();\r\n\t\t  var oSave = oView.byId(\"saveNew\");\r\n\t\t  var oCancel = oView.byId(\"cancelNew\");\r\n\t\t  var oDelete = oView.byId(\"deleteField\");\r\n\t\t  var deleteButton = !create;\r\n\t\t  oSave.setVisible(create);\r\n\t\t  oCancel.setVisible(create);\r\n\t\t  oDelete.setVisible(deleteButton);\r\n\t\t},\r\n\t\t/**\r\n\t\t* Bind a local json model to the view to store a new field before pushing it to the backend\r\n\t\t*/\r\n\t\tbindLocalModel: function() {\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar localModel = new sap.ui.model.json.JSONModel({\r\n\t\t\t\tFieldSet: {\r\n\t\t\t\t\t\"Description\": \"New field\",\r\n\t\t\t\t\t\"Id\": \"New field\",\r\n\t\t\t\t\t\"Active\": true,\r\n\t\t\t\t\t\"Langu\": \"EN\"\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tvar oView = this.getView();\r\n\t\t\t\r\n\t\t\toView.setModel(localModel);\r\n\t\t\toView.bindElement(\"/FieldSet\");\r\n\t\t}\r\n\t\t \r\n\t\t \r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gdprcockpit.view.DataFieldDetail\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gdprcockpit.view.DataFieldDetail\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gdprcockpit.view.DataFieldDetail\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gdprcockpit/controller/VaultList.controller.js": "sap.ui.define([\r\n\t\"gdprcockpit/controller/BaseController\",\r\n], function(BaseController) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gdprcockpit.controller.VaultList\", {\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gdprcockpit.view.VaultList\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Show the detail screen when a vault entity is selected\r\n\t\t */\r\n\t\tonSelectVaultEntity: function(oEvent) {\r\n\t\t\tvar oEntity = oEvent.getParameter(\"listItem\");\r\n\t\t\tvar oContext = oEntity.getBindingContext();\r\n\t\t\tvar oObject = oContext.getObject();\r\n\t\t\tBaseController.VaultEntityId = oObject.EntityId;\r\n\t\t\tthis.getRouter().navTo(\"datavaultentity\", {id: BaseController.VaultEntityId});\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal methods                                            */\r\n\t\t/* =========================================================== */\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Search for vault entities\r\n\t\t */\r\n\t\t applyFilter: function(oFilters) {\r\n\t\t \t\r\n\t\t \t// Apply filter\r\n\t\t \tvar vaultTable = this.getView().byId(\"vaultentitycontent\");\r\n\t\t \tvaultTable.getBinding(\"items\").filter(oFilters);\r\n\t\t \t\r\n\t\t }\r\n\t\t\r\n\t\t/* =========================================================== */\r\n\t\t/* Unused livecycle methods                                    */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gdprcockpit.view.VaultList\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gdprcockpit.view.VaultList\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gdprcockpit.view.VaultList\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gdprcockpit/controller/DsrList.controller.js": "sap.ui.define([\r\n\t\"gdprcockpit/controller/BaseController\",\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(BaseController, Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gdprcockpit.controller.DsrList\", {\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gdprcockpit.view.DsrList\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\t\t/**\r\n\t\t * Show the details of a data subject request\r\n\t\t */\r\n\t\t onDsrSelect: function(oEvent) {\r\n\t\t\tvar oEntity = oEvent.getParameter(\"listItem\");\r\n\t\t\tvar oContext = oEntity.getBindingContext();\r\n\t\t\tvar oObject = oContext.getObject();\r\n\t\t\tBaseController.DsrId = oObject.DsrId;\r\n\t\t\tthis.getRouter().navTo(\"dsrdetail\", {dsrId: BaseController.DsrId});\r\n\t\t },\r\n\t\t/**\r\n\t\t * Show the details of a data subject request\r\n\t\t */\r\n\t\t onAddDsr: function(oEvent) {\r\n\t\t\tthis.getRouter().navTo(\"dsrdetail\", {dsrId: \"NEW\"});\r\n\t\t }\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal methods                                            */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gdprcockpit.view.DsrList\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gdprcockpit.view.DsrList\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gdprcockpit.view.DsrList\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gdprcockpit/controller/utilities.js": "sap.ui.define([\n\t\"./utilities\"\n], function() {\n\t\"use strict\";\n\n\t// class providing static utility methods to retrieve entity default values.\n\n\treturn {\n\n\t};\n});",
		"gdprcockpit/controller/MaintainDescriptions.controller.js": "sap.ui.define([\r\n\t\"gdprcockpit/controller/BaseController\",\r\n\t'sap/ui/core/Fragment'\r\n], function(BaseController,Fragment) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gdprcockpit.controller.MaintainDescriptions\", {\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal attributes                                         */\r\n\t\t/* =========================================================== */\r\n\t\tObjectType: null,\r\n\t\t\r\n\t\t/* =========================================================== */\r\n\t\t/* Event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gdprcockpit.view.MaintainDescriptions\r\n\t\t */\r\n\t\t\tonInit: function() {\r\n\t\t\t\tthis.getRouter().getRoute(\"descriptions\").attachPatternMatched(this.handleRouteMatched, this);\r\n\t\t\t},\r\n\t\t/**\r\n\t\t * Check if a description object type is provided in the URL. If so, bind it to the view\r\n\t\t */\r\n\t\thandleRouteMatched: function(oEvent) {\r\n\r\n\t\t\tthis.ObjectType = oEvent.getParameter(\"arguments\").objectType;\r\n\t\t\tif (this.ObjectType) {\r\n\t\t\t\tthis.setFilter();\r\n\t\t\t\tthis.setTableTitle();\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Add a new description\r\n\t\t */\r\n\t\tonAddDescription: function(oEvent) {\r\n\t\t\t\r\n\t\t\t\tvar oButton = oEvent.getSource();\r\n\t\t\t\t\r\n\t\t\t\t// create popover\r\n\t\t\t\tif (!this._oPopover) {\r\n\t\t\t\t\tthis._oPopover = sap.ui.xmlfragment(\"popoverDescription\",\"gdprcockpit.view.NewDescriptionKey\", this);\r\n\t\t\t\t}\r\n\t\t\t\tthis.getView().addDependent(this._oPopover);\r\n\t\t\t\t\r\n\t\t\t\t// delay because addDependent will do a async rerendering and the actionSheet will immediately close without it.\r\n\t\t\t\tjQuery.sap.delayedCall(1, this, function () {\r\n\t\t\t\t\tthis._oPopover.openBy(oButton);\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t},\r\n\t\t\t/**\r\n\t\t\t * Event handler for adding a description\r\n\t\t\t */\r\n\t\t\tnewDescriptionEntered: function(oEvent) {\r\n\t\t\t\tvar oDescription = Fragment.byId(\"popoverDescription\", \"newdescription\");\r\n\t\t\t\tvar sDescription = oDescription.getValue();\r\n\t\t\t\tif (!sDescription) {\r\n\t\t\t\t\t// Do nothing if no description was entered\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar newLine = {\r\n\t\t\t\t\tObjectType: this.ObjectType,\r\n\t\t\t\t\tObjectId: '99999',\r\n\t\t\t\t\tDescription: oDescription.getValue()\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tvar oModel = this.getModel();\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toModel.create(\"/ObjectDescriptionSet\", newLine,\r\n\t\t\t\t{\r\n\t\t\t\t\tsuccess: function(response) {\r\n\t\t\t\t\t\tthat.handleCreateDescriptionSuccess(response);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: that.handleCreateDescriptionError\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t /**\r\n\t\t  * Handle the successfull creation of a new source\r\n\t\t  */\r\n\t\t  handleCreateDescriptionSuccess: function (response) {\r\n\t\t\t\tvar oDescription = Fragment.byId(\"popoverDescription\", \"newdescription\");\r\n\t\t\t\toDescription.setValue(\"\");\r\n\t\t\t\tthis._oPopover.close();\r\n\t\t  },\r\n\t\t /**\r\n\t\t  * Handle the successfull creation of a new source\r\n\t\t  */\r\n\t\t  handleCreateDescriptionError: function (response) {\r\n\t\t  \t\r\n\t\t  },\r\n\t\t/**\r\n\t\t * Delete a description\r\n\t\t */\r\n\t\tonDeleteDescription: function(oEvent) {\r\n\t\t\tthis._deleteRow(oEvent);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal methods                                            */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Set the object type filter\r\n\t\t */\r\n\t\tsetFilter: function( ) {\r\n\t\t\tvar typeFilter = new sap.ui.model.Filter(\"ObjectType\",\"EQ\",this.ObjectType);\r\n\t\t\tvar oFilters = [typeFilter];\r\n\t\t\tvar oTable = this.getView().byId(\"DescriptionTable\");\r\n\t\t\tvar oBinding = oTable.getBinding(\"items\");\r\n\t\t\toBinding.filter(oFilters);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Set the table title\r\n\t\t */\r\n\t\tsetTableTitle: function() {\r\n\t\t\t\r\n\t\t\tvar sTitle;\r\n\t\t\t\r\n\t\t\t\tswitch (this.ObjectType) { \r\n\t\t\t\t\tcase \"ZGDPR_DE_SRC_TYPE_ID\":\r\n\t\t\t\t\t\tsTitle = \"Source type\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\tthis.getView().byId(\"DescriptionTableTitle\").setText(sTitle);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gdprcockpit.view.MaintainDescriptions\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gdprcockpit.view.MaintainDescriptions\r\n\t\t */\r\n\t\t\t// onAfterRendering: function() {\r\n\t\t\t//\r\n\t\t\t// }\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gdprcockpit.view.MaintainDescriptions\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gdprcockpit/controller/ErrorHandler.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/m/MessageBox\"\n\t], function (UI5Object, MessageBox) {\n\t\t\"use strict\";\n\n\t\treturn UI5Object.extend(\"gdprcockpit.controller.ErrorHandler\", {\n\n\t\t\t/**\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t\t * @class\n\t\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t\t * @public\n\t\t\t * @alias gdprcockpit.controller.ErrorHandler\n\t\t\t */\n\t\t\tconstructor : function (oComponent) {\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\t\tthis._oComponent = oComponent;\n\t\t\t\tthis._oModel = oComponent.getModel();\n\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\t\tthis._oModel.attachMetadataFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\t\tthis._showMetadataError(oParams.response);\n\t\t\t\t}, this);\n\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\n\t\t\t * The user can try to refresh the metadata.\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showMetadataError : function (sDetails) {\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorText,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"metadataErrorMessageBox\",\n\t\t\t\t\t\tdetails : sDetails,\n\t\t\t\t\t\tstyleClass : this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions : [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose : function (sAction) {\n\t\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\n\t\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t\t * Only the first error message will be display.\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showServiceError : function (sDetails) {\n\t\t\t\tif (this._bMessageOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._bMessageOpen = true;\n\t\t\t\t\n\t\t\t\t// Declare message parameters\n\t\t\t\tvar sShort; // short message text\n\t\t\t\tvar sLong; // details\n\t\t\t\t\n\t\t\t\t//Check the message content type\n\t\t\t\tvar contentType = sDetails.headers[\"Content-Type\"];\n\t\t\t\tvar parsedMessage, messageString, longText;\n\t\t\t\t\n\t\t\t\tif (contentType) {\n\t\t\t\t\t// string.indexOf('substring') will return the position of the substring. If the substring does not occur, the result will be -1.\n\t\t\t\t\t// -1 is truthy, but its bitwise inverse (0) is falsy.\n\t\t\t\t\tif(~contentType.indexOf('json')) {\n\t\t\t\t\t\tparsedMessage = JSON.parse(sDetails.responseText);\n\t\t\t\t\t\tmessageString = parsedMessage.error.message.value;\n\t\t\t\t\t\tlongText = parsedMessage.error.innererror;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// XML\n\t\t\t\t\t\tparsedMessage = jQuery.parseXML(sDetails.responseText);\n\t\t\t\t\t\tmessageString = parsedMessage.querySelector(\"message\").textContent;\n\t\t\t\t\t\tlongText = sDetails.responseText;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmessageString = sDetails.message;\n\t\t\t\t\tlongText = sDetails.responseText;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tsShort = messageString;\n\t\t\t\tsLong = JSON.stringify(longText);\n\t\t\t\t\n\t\t\t\t/*if ( ~contentType.indexOf('xml')) {\n\t\t\t\t\tparsedMessage = jQuery.parseXML(sDetails.responseText);\n\t\t\t\t} else if(~contentType.indexOf('json')) {\n\t\t\t\t\tparsedMessage = JSON.parse(sDetails.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tparsedMessage = jQuery.parseXML(sDetails.responseText);\n\t\t\t\t}*/\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t/*// Check if the error message is a custom message. If so, only show a clean message. If not, show the standard technical details.\n\t\t\t\tvar sCode = parsedMessage.error.code;\n\t\t\t\tvar sMessageClassPrefix = sCode.charAt(0);\n\t\t\t\t\n\t\t\t\tif (sMessageClassPrefix == \"Z\") {\n\t\t\t\t\tsShort = parsedMessage.error.message.value;\n\t\t\t\t\tsLong = JSON.stringify(parsedMessage.error.innererror);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t// Try also shortening the  message for standard sap errors\n\t\t\t\t\tsShort = parsedMessage.error.message.value;\n\t\t\t\t\tsLong = JSON.stringify(parsedMessage.error.innererror);\n\t\t\t\t\t\n\t\t\t\t\tsShort = this._sErrorText;\n\t\t\t\t\tsLong = sDetails;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tsShort,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\n\t\t\t\t\t\tdetails : sLong,\n\t\t\t\t\t\tstyleClass : this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions : [MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose : function () {\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"gdprcockpit/controller/SourceUsers.controller.js": "sap.ui.define([\r\n\t\"gdprcockpit/controller/BaseController\",\r\n\t\"sap/ui/model/Filter\"\r\n], function(BaseController,Filter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gdprcockpit.controller.SourceUsers\", {\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gdprcockpit.view.SourceUsers\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Handle the creation of a new data source user.\r\n\t\t * In order to create a new user, a popup is first displayed that allows for selecting a user name of the user to be created\r\n\t\t */\r\n\t\t onAddSourceUser: function(oEvent) {\r\n\t\t \tif (! this._oDialog) {\r\n\t\t\t\t\tthis._oDialog = sap.ui.xmlfragment(\"gdprcockpit.view.UserNameValueHelp\", this);\r\n\t\t\t\t\tthis._oDialog.setModel(this.getView().getModel());\r\n\t\t\t\t}\r\n\t\r\n\t \r\n\t\t\t\t// clear the old search filter\r\n\t\t\t\tthis._oDialog.getBinding(\"items\").filter([ new Filter(\"Field\", sap.ui.model.FilterOperator.EQ, 'XUBNAME') ]);\r\n\t \r\n\t\t\t\t// toggle compact style\r\n\t\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this._oDialog);\r\n\t\t\t\tthis._oDialog.open();\r\n\t\t \t\r\n\t\t },\r\n\t\t \r\n\t\t /**\r\n\t\t  * Process the selected username\r\n\t\t  * Create a new user line with the selected username\r\n\t\t  */\r\n\t\thandleUserNameValueHelp: function(oEvent) {\r\n\t\t\t// Get the selected username\r\n\t\t\tvar oItem = oEvent.getParameter(\"selectedItem\");\r\n\t\t\tvar oContext = oItem.getBindingContext();\r\n\t\t\tvar oObject = oContext.getObject();\r\n\t\t\tvar userName = oObject.Id;\r\n\t\t\t\r\n\t\t\t// Create a new line with the selected username\r\n\t\t\tvar newLine = {\r\n\t\t\t\tSource: BaseController.SourceId, \r\n\t\t\t\tUsername: userName,\r\n\t\t\t\tName: oObject.Description,\r\n\t\t\t\tUserActivity: \"00003\"\r\n\t\t\t};\r\n\t\t\tvar oModel = this.getModel();\r\n\t\t\tvar that = this;\r\n\t\t\toModel.create(\"/SourceUsersSet\", newLine,\r\n\t\t\t{\r\n\t\t\t\tsuccess: function(response) {\r\n\t\t\t\t\tthat.handleCreatefieldSuccess(response);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(response) {\r\n\t\t\t\t\t//that.handleCreateSourceError\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\thandleCreatefieldSuccess: function(response){\r\n\t\t \t// If a change is made to a user, refresh the binding to ensure the editability is always correct\r\n\t\t \t// New users are added in display mode, so this is not necessary\r\n\t\t\t//this.refreshSourceBinding();\r\n\t\t},\r\n\t\t/**\r\n\t\t * Delete a user\r\n\t\t */\r\n\t\tonDeleteUser: function(oEvent) {\r\n\t\t\tthis._deleteRow(oEvent);\r\n\t\t\t\r\n\t\t \t// If a change is made to a user, refresh the binding to ensure the editability is always correct\r\n\t\t\tthis.refreshSourceBinding();\r\n\t\t},\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\t onChange: function(){\r\n\t\t \t// If a change is made to a user, refresh the binding to ensure the editability is always correct\r\n\t\t \tthis.save();\r\n\t\t\tthis.refreshSourceBinding();\r\n\t\t },\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal methods                                            */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Refresh the binding if a change has been made to the users\r\n\t\t */\r\n\t\t refreshSourceBinding: function(){\r\n\t\t \t/* AddSourceUser is a button on the SourceUsers view.\r\n\t\t \t\tFirst, we get the parent view of AddSourceUser, which is the SourceUsers view\r\n\t\t \t\tNext, we get the parent view of the SourceUsers view, which is the DataSources view\r\n\t\t \t*/\r\n\t\t\tvar oSrcView = this._getParentView(this._getParentView(this.getView().byId(\"AddSourceUser\")));\r\n\t\t \t\r\n\t\t\tvar oBinding = oSrcView.getElementBinding();\r\n\t\t\t\r\n\t\t\tjQuery.sap.delayedCall(200, this, function () {\r\n\t\t\t\toBinding.refresh();\r\n\t\t\t});\r\n\t\t \t\r\n\t\t }\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gdprcockpit.view.SourceUsers\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gdprcockpit.view.SourceUsers\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gdprcockpit.view.SourceUsers\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gdprcockpit/controller/DataVault.controller.js": "sap.ui.define([\n\t\"gdprcockpit/controller/BaseController\",\n\t\"sap/m/MessageBox\",\n\t\"./utilities\",\n\t\"sap/ui/core/routing/History\"\n], function(BaseController, MessageBox, Utilities, History) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"gdprcockpit.controller.DataVault\", {\n\t\t/* =========================================================== */\n\t\t/* Event handlers                                              */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * This method is executed once when initialising the controller\n\t\t */\n\t\tonInit: function() {\n\t\t\tthis.bindUserIfMDL();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Search for vault entities\n\t\t */\n\t\t onVaultQuery: function() {\n\t\t \t\n\t\t \t// Read values from input fields\n\t\t \tvar src = this.getView().byId(\"sourceSelector\").getSelectedKey();\n\t\t \tvar fld = this.getView().byId(\"fieldSelector\").getSelectedKey();\n\t\t \tvar value = this.getView().byId(\"queryfieldvalue\").getValue();\n\t\t \tvar oFilters = [];\n\t\t \t\n\t\t \t// Create filter for values that are not initial\n\t\t \tif(src) {\n\t\t \t\toFilters.push( new sap.ui.model.Filter(\"Source\",\"EQ\",src) );\n\t\t \t}\n\t\t \tif(fld) {\n\t\t \t\toFilters.push( new sap.ui.model.Filter(\"FilterField\",\"EQ\",fld));\n\t\t \t}\n\t\t \tif(value) {\n\t\t \t\toFilters.push( new sap.ui.model.Filter(\"FilterValue\",\"EQ\",value));\n\t\t \t}\n\t\t \t\n\t\t \t// Apply filter\n\t\t \tvar oListController = this.getView().byId(\"vaultList\").getController();\n\t\t \toListController.applyFilter(oFilters);\n\t\t \t/*var vaultTable = this.getView().byId(\"vaultentitycontent\");\n\t\t \tvaultTable.getBinding(\"items\").filter(oFilters);*/\n\t\t \t\n\t\t \t// Open results panel\n\t\t \tthis.getView().byId(\"result\").setExpanded(true);\n\t\t \t\n\t\t },\n\t\t\n\t\t/**\n\t\t * Show the detail screen when a vault entity is selected\n\t\t */\n\t\tonSelectVaultEntity: function(oEvent) {\n\t\t\tvar oEntity = oEvent.getParameter(\"listItem\");\n\t\t\tvar oContext = oEntity.getBindingContext();\n\t\t\tvar oObject = oContext.getObject();\n\t\t\tBaseController.VaultEntityId = oObject.EntityId;\n\t\t\tthis.getRouter().navTo(\"datavaultentity\", {id: BaseController.VaultEntityId});\n\t\t},\n\n\t\t_onListItemPress: function(oEvent) {\n\n\t\t\tvar oBindingContext = oEvent.getParameter(\"listItem\").getBindingContext();\n\n\t\t\treturn new Promise(function(fnResolve) {\n\t\t\t\tthis.doNavigate(\"DataSources\", oBindingContext, fnResolve, \"\");\n\t\t\t}.bind(this)).catch(function(err) {\n\t\t\t\tif (err !== undefined) {\n\t\t\t\t\tMessageBox.error(err.message);\n\t\t\t\t}\n\t\t\t});\n\n\t\t},\n\t\t/* =========================================================== */\n\t\t/* Internal methods                                            */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t *  Bind user if metadata loaded\n\t\t *  Check if the metadata is loaded. If yes, bind the user display. If not, load the metadata and then bind the user display.\n\t\t */\n\t\t bindUserIfMDL: function() {\n\t\t \tif (BaseController.MetadataLoaded) {\n\t\t \t\tthis.bindUser();\n\t\t \t} else {\n\t\t \t\tvar that = this;\n\t\t \t\tthis.getOwnerComponent().getModel().metadataLoaded().then( function() {\n\t\t \t\t\tBaseController.MetadataLoaded = true;\n\t\t \t\t\tthat.bindUser();\n\t\t \t\t});\n\t\t \t}\n\t\t },\n\t\t /**\n\t\t  * Bind a user to the user display\n\t\t  */\n\t\t bindUser: function() {\n\t\t \tvar oModel = this.getOwnerComponent().getModel();\n\t\t \tvar sPath = \"/\" + oModel.createKey(\"userSet\", {\n\t\t\t\t\t\t\tUsername: \" \"\n\t\t\t\t});\n\t\t\tvar userName = this.getView().byId(\"username\");\n\t\t\tvar userFullname = this.getView().byId(\"userFullname\");\n\t\t\tuserName.bindElement({path: sPath});\n\t\t\tuserFullname.bindElement({path: sPath});\n\t\t }\n\t});\n}, /* bExport= */ true);",
		"gdprcockpit/controller/Splash.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"gdprcockpit.controller.Splash\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gdprcockpit.view.Splash\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gdprcockpit.view.Splash\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gdprcockpit.view.Splash\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gdprcockpit.view.Splash\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gdprcockpit/controller/ListSelector.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\"\n\t], function (BaseObject) {\n\t\t\"use strict\";\n\n\t\treturn BaseObject.extend(\"gdprcockpit.model.ListSelector\", {\n\n\t\t\t/**\n\t\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\n\t\t\t * function.\n\t\t\t * @class\n\t\t\t * @public\n\t\t\t * @alias rere.model.ListSelector\n\t\t\t */\n\n\t\t\tconstructor : function () {\n\t\t\t\tthis._oWhenListHasBeenSet = new Promise(function (fnResolveListHasBeenSet) {\n\t\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\n\t\t\t\t}.bind(this));\n\t\t\t\t// This promise needs to be created in the constructor, since it is allowed to\n\t\t\t\t// invoke selectItem functions before calling setBoundMasterList\n\t\t\t\tthis.oWhenListLoadingIsDone = new Promise(function (fnResolve, fnReject) {\n\t\t\t\t\t// Used to wait until the setBound masterList function is invoked\n\t\t\t\t\tthis._oWhenListHasBeenSet\n\t\t\t\t\t\t.then(function (oList) {\n\t\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\n\t\t\t\t\t\t\t\tfunction (oData) {\n\t\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : true\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\n\t\t\t\t\t\t\t\t\tif (oFirstListItem) {\n\t\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\n\t\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\n\t\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\n\t\t\t\t\t\t\t\t\t\tfnResolve({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\tfirstListitem : oFirstListItem\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// No items in the list\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\n\t\t\t * May only be invoked once per ListSelector instance.\n\t\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\n\t\t\t * @public\n\t\t\t */\n\t\t\tsetBoundMasterList : function (oList) {\n\t\t\t\tthis._oList = oList;\n\t\t\t\tthis._fnResolveListHasBeenSet(oList);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\n\t\t\t * no selection/scrolling will happen\n\t\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\n\t\t\t * @public\n\t\t\t */\n\t\t\tselectAListItem : function (sBindingPath) {\n\n\t\t\t\tthis.oWhenListLoadingIsDone.then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tvar oList = this._oList,\n\t\t\t\t\t\t\toSelectedItem;\n\n\t\t\t\t\t\tif (oList.getMode() === \"None\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toSelectedItem = oList.getSelectedItem();\n\n\t\t\t\t\t\t// skip update if the current selection is already matching the object path\n\t\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toList.getItems().some(function (oItem) {\n\t\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\t\toList.setSelectedItem(oItem);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath + \" because the list encountered an error or had no items\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t/* =========================================================== */\n\t\t\t/* Convenience Functions for List Selection Change Event       */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {rere.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tattachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {rere.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tdetachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Removes all selections from master list.\n\t\t\t * Does not trigger 'selectionChange' event on master list, though.\n\t\t\t * @public\n\t\t\t */\n\t\t\tclearMasterListSelection : function () {\n\t\t\t\t//use promise to make sure that 'this._oList' is available\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t\t}.bind(this));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"gdprcockpit/controller/DataVaultEntity.controller.js": "sap.ui.define([\n\t\"gdprcockpit/controller/BaseController\",\n\t\"sap/m/MessageBox\",\n\t\"./utilities\",\n\t\"sap/ui/core/routing/History\"\n], function(BaseController, MessageBox, Utilities, History) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"gdprcockpit.controller.DataVaultEntity\", {\n\t\t\n\t\t\n\t\t/* =========================================================== */\n\t\t/* Event handlers                                              */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * This method is executed once when initialising the controller\n\t\t */\n\t\tonInit: function() {\n\t\t\t\n\t\t\tthis.getRouter().getRoute(\"datavaultentity\").attachPatternMatched(this.handleRouteMatched, this);\n\t\t},\n\t\thandleRouteMatched: function(oEvent) {\n\n\t\t\tvar id = oEvent.getParameter(\"arguments\").id;\n\t\t\tif (id) {\n\t\t\t\tBaseController.VaultEntityId = id;\n\t\t\t}\n\t\t\t\n\t\t\tif (BaseController.VaultEntityId) {\n\t\t\t\tthis.bindEntityIfMDL();\n\t\t\t} else {\n\t\t\t\t// If no source is selected yet, show the source selection panel\n\t\t\t\tvar oSelect = this.getView().byId(\"select\");\n\t\t\t\toSelect.setExpanded(true);\n\t\t\t\t\n\t\t\t\tvar oProperties = this.getView().byId(\"properties\");\n\t\t\t\tvar oControl = this.getView().byId(\"control\");\n\t\t\t\toProperties.setExpanded(false);\n\t\t\t\toControl.setExpanded(false);\n\t\t\t\t\n\t\t\t}\n\n\t\t},\n\t\t/* =========================================================== */\n\t\t/* Internal methods                                            */\n\t\t/* =========================================================== */\n\t\t\t\n\t\t/**\n\t\t *  Bind entity if metadata loaded\n\t\t *  Check if the metadata is loaded. If yes, bind the view. If not, load the metadata and then bind the view.\n\t\t */\n\t\t bindEntityIfMDL: function() {\n\t\t \tif (BaseController.MetadataLoaded) {\n\t\t \t\tthis.bindEntity();\n\t\t \t} else {\n\t\t \t\tvar that = this;\n\t\t \t\tthis.getModel().metadataLoaded().then( function() {\n\t\t \t\t\tBaseController.MetadataLoaded = true;\n\t\t \t\t\tthat.bindEntity();\n\t\t \t\t});\n\t\t \t}\n\t\t },\n\t\t /**\n\t\t  * Bind an entity to this view\n\t\t  */\n\t\t bindEntity: function() {\n\t\t \tvar oModel = this.getModel();\n\t\t \tvar id =  BaseController.VaultEntityId;\n\t\t \tvar sPath = \"/\" + oModel.createKey(\"VaultEntitySet\", {\n\t\t\t\t\t\t\tEntityId: id\n\t\t\t\t});\n\t\t\tthis.getView().bindElement({path: sPath});\n\t\t }\n\t});\n}, /* bExport= */ true);",
		"gdprcockpit/controller/SourceFields.controller.js": "sap.ui.define([\r\n\t\"gdprcockpit/controller/BaseController\"\r\n], function(BaseController) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"gdprcockpit.controller.SourceFields\", {\r\n\t\t/* =========================================================== */\r\n\t\t/* Event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf gdprcockpit.view.SourceFields\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\t\t/**\r\n\t\t * Handle the creation of a new data source field\r\n\t\t */\r\n\t\t onAddSourceField: function(oEvent) {\r\n\t\t\tvar newLine = {\r\n\t\t\t\tSource: BaseController.SourceId, \r\n\t\t\t\tSourceField: \"00000\",\r\n\t\t\t\tField: \"00000\",\r\n\t\t\t\tSourceFieldName: \"New field\",\r\n\t\t\t\tSrcfldActive: false,\r\n\t\t\t\tInputAllowed: true\r\n\t\t\t};\r\n\t\t\tvar oModel = this.getModel();\r\n\t\t\tvar that = this;\r\n\t\t\toModel.create(\"/SourceFieldsSet\", newLine,\r\n\t\t\t{\r\n\t\t\t\tsuccess: function(response) {\r\n\t\t\t\t\t//that.handleCreatefieldSuccess(response);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(response) {\r\n\t\t\t\t\t//that.handleCreatefieldError\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t },\r\n\t\t/**\r\n\t\t * Delete a field\r\n\t\t */\r\n\t\tonDeleteField: function(oEvent) {\r\n\t\t\tthis._deleteRow(oEvent);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf gdprcockpit.view.SourceFields\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf gdprcockpit.view.SourceFields\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf gdprcockpit.view.SourceFields\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"gdprcockpit/view/UserNameValueHelp.fragment.xml": "<core:FragmentDefinition\r\n\txmlns=\"sap.m\"\r\n\txmlns:core=\"sap.ui.core\">\r\n\t<!-- Search help for user name -->\r\n\t<SelectDialog\r\n\t\tnoDataText=\"No users found\"\r\n\t\ttitle=\"Select user\"\r\n\t\tsearch=\"handleUserFilter\"\r\n\t\tconfirm=\"handleUserNameValueHelp\"\r\n\t\tcancel=\"handleValueHelpCancel\"\r\n\t\titems=\"{\r\n\t\t\tpath: '/ValueHelpSet',\r\n\t\t\tfilters: [ { path: 'Field', operator: 'EQ', value1: 'XUBNAME' } ],\r\n\t\t\ttemplateShareable:false }\" >\r\n\t\t<StandardListItem\r\n\t\t\ttitle=\"{Id}\"\r\n\t\t\tdescription=\"{Description}\"\r\n\t\t\ttype=\"Active\" />\r\n\t</SelectDialog>\r\n</core:FragmentDefinition>",
		"gdprcockpit/view/DataVaultEntity.view.xml": "<mvc:View\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\tcontrollerName=\"gdprcockpit.controller.DataVaultEntity\"\n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\"\n\txmlns:form=\"sap.ui.layout.form\"\n\txmlns:core=\"sap.ui.core\">\n\t<semantic:DetailPage\n\t\tid=\"vaultEntityPage\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"true\"\n\t\ttitle=\"{i18n>pageVaultEntity}\" >\n\t\t<semantic:content>\n\t\t\t<Panel headerText=\"{i18n>VaultEntityProperties}\">\n\t\t\t\t\t\t<form:SimpleForm\n\t\t\t\t\t\t\tlayout=\"ResponsiveGridLayout\"\n\t\t\t\t\t\t\tcolumnsXL=\"2\"\n\t\t\t\t\t\t\tcolumnsL=\"2\"\n\t\t\t\t\t\t\tcolumnsM=\"2\">\n\t\t\t\t\t\t\t<!--Column 1-->\n\t\t\t\t\t\t\t<core:Title  />\n\t\t\t\t\t\t\t<Label text=\"{i18n>VaultEntityId}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<Text text=\"{EntityId}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"Consent type\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<Text text=\"{ConsentTypeDescr}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"Consent form\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<Text text=\"{ConsentFormDescr}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"Consent text\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<Text text=\"{ConsentText}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<!--column 2-->\n\t\t\t\t\t\t\t<core:Title class=\"emptytitle\" />\n\t\t\t\t\t\t\t<Label text=\"{i18n>Source}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<Text text=\"{Sourcename}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"{i18n>VaultEntityCreationdate}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<Text text=\"{\n\t\t\t\t\t\t\t\t\t\t\tpath: 'CreationDate',\n\t\t\t\t\t\t\t\t\t\t\ttype: 'sap.ui.model.type.Date',\n\t\t\t\t\t\t\t\t\t\t\tformatOptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tpattern: 'dd MMM yyyy'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"{i18n>VaultEntityRetentiondate}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<Text text=\"{\n\t\t\t\t\t\t\t\t\t\t\tpath: 'RetentionDate',\n\t\t\t\t\t\t\t\t\t\t\ttype: 'sap.ui.model.type.Date',\n\t\t\t\t\t\t\t\t\t\t\tformatOptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tpattern: 'dd MMM yyyy'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t</form:SimpleForm>\n\t\t\t</Panel>\n\t\t\t<Panel headerText=\"{i18n>VaultEntityFields}\">\n\t\t\t\t<Table\n\t\t\t\t\tid=\"vaultentitycontent\"\n\t\t\t\t\tnoDataText=\"No data\"\n\t\t\t\t\tshowSeparators=\"All\"\n\t\t\t\t\tmode=\"None\"\n\t\t\t\t\titems=\"{EntityToField}\">\n\t\t\t\t\t<infoToolbar>\n\t\t\t\t\t\t<Toolbar width=\"100%\" height=\"auto\" design=\"Auto\" visible=\"false\" enabled=\"true\">\n\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t<Label text=\"Label\" design=\"Standard\" width=\"100%\" required=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</infoToolbar>\n\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t<Title text=\"MarkTeamleader (3)\" titleStyle=\"Auto\" width=\"auto\" textAlign=\"Begin\" visible=\"false\" />\n\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t<tooltip/>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t<columns>\n\t\t\t\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Phone\" demandPopin=\"false\" popinDisplay=\"Inline\" mergeDuplicates=\"true\">\n\t\t\t\t\t\t\t<Text text=\"{i18n>vaultEntitySourceFieldName}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t<Text text=\"{i18n>VaultColumnValue}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t<Text text=\"{i18n>vaultColumnIdentifier}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</columns>\n\t\t\t\t\t<items>\n\t\t\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t<Text text=\"{SourceFieldName}\" />\n\t\t\t\t\t\t\t\t<Text text=\"{Value}\" width=\"auto\" />\n\t\t\t\t\t\t\t\t<Switch state=\"{Identifier}\" type=\"Default\" enabled=\"false\" visible=\"true\"/>\n\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t</items>\n\t\t\t\t</Table>\n\t\t\t</Panel>\n\t\t</semantic:content>\n\t</semantic:DetailPage>\n\t\t\t\n\t\t\t\n\t\t\t\n\t<!--<Page showHeader=\"false\" title=\"Page Title\" showFooter=\"false\" showNavButton=\"false\" enableScrolling=\"false\">\n\t\t<content>\n\t\t\t<layout1:AbsoluteLayout horizontalScrolling=\"Hidden\" verticalScrolling=\"Auto\">\n\t\t\t\t<layout1:positions>\n\t\t\t\t\t<layout1:PositionContainer left=\"0px\" top=\"0px\">\n\t\t\t\t\t\t<layout1:control>\n\t\t\t\t\t\t\t<HBox alignItems=\"Stretch\" direction=\"Row\" fitContainer=\"false\" width=\"100%\" height=\"100%\" justifyContent=\"Start\" renderType=\"Div\"\n\t\t\t\t\t\t\t\tvisible=\"true\" displayInline=\"false\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\t\tid=\"sap_m_Page_0-content-sap_m_HBox-1516789801037-1d937f91fd619df60f2b392e1_S1-ef08419352270fdf0f2b43b42_S2-bdcb968479c3d2210f2b60523_S3-items-build_simple_Table-1516801558031\"\n\t\t\t\t\t\t\t\t\t\twidth=\"100%\" noDataText=\"No data\" mode=\"None\" showSeparators=\"All\" growing=\"true\" growingThreshold=\"20\" growingScrollToLoad=\"true\"\n\t\t\t\t\t\t\t\t\t\titems=\"{/VaultFieldSet}\">\n\t\t\t\t\t\t\t\t\t\t<infoToolbar>\n\t\t\t\t\t\t\t\t\t\t\t<Toolbar width=\"100%\" height=\"auto\" design=\"Auto\" visible=\"false\" enabled=\"true\">\n\t\t\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Label\" design=\"Standard\" width=\"100%\" required=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t\t\t\t</infoToolbar>\n\t\t\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t\t\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Title text=\"MarkTeamleader (3)\" titleStyle=\"Auto\" width=\"auto\" textAlign=\"Begin\" visible=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t\t\t\t<tooltip/>\n\t\t\t\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Phone\" demandPopin=\"false\" popinDisplay=\"Inline\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text text=\"Field\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t\t\t\t<footer/>\n\t\t\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text text=\"Value\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t\t\t\t<footer/>\n\t\t\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text text=\"Identifier\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t\t\t\t<footer/>\n\t\t\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ObjectIdentifier title=\"{FieldName}\" text=\"{FieldType}\" titleActive=\"false\" visible=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text text=\"Supplier Name\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Switch state=\"{Identifying}\" customTextOff=\"No\" customTextOn=\"Yes\" type=\"Default\" enabled=\"false\" visible=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<layoutData/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</layout1:control>\n\t\t\t\t\t</layout1:PositionContainer>\n\t\t\t\t</layout1:positions>\n\t\t\t</layout1:AbsoluteLayout>\n\t\t</content>\n\t\t<footer>\n\t\t\t<Bar design=\"Auto\">\n\t\t\t\t<contentLeft/>\n\t\t\t\t<contentMiddle/>\n\t\t\t\t<contentRight>\n\t\t\t\t\t<Button text=\"Approve\" type=\"Accept\" iconFirst=\"true\" width=\"auto\" enabled=\"true\" visible=\"true\" iconDensityAware=\"false\"/>\n\t\t\t\t\t<Button text=\"Reject\" type=\"Reject\" iconFirst=\"true\" width=\"auto\" enabled=\"true\" visible=\"true\" iconDensityAware=\"false\"/>\n\t\t\t\t\t<Button text=\"\" type=\"Default\" icon=\"sap-icon://action\" iconFirst=\"true\" width=\"auto\" enabled=\"true\" visible=\"true\" iconDensityAware=\"false\"/>\n\t\t\t\t</contentRight>\n\t\t\t</Bar>\n\t\t</footer>\n\t\t<headerContent/>\n\t\t<subHeader/>\n\t\t<customHeader/>\n\t</Page>-->\n</mvc:View>",
		"gdprcockpit/controller/DataFields.controller.js": "sap.ui.define([\n\t\"gdprcockpit/controller/BaseController\",\n\t\"sap/m/MessageBox\",\n\t\"./utilities\",\n\t\"sap/ui/core/routing/History\"\n], function(BaseController, MessageBox, Utilities, History) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"gdprcockpit.controller.DataFields\", {\n\t\t/* =========================================================== */\n\t\t/* Event handlers                                              */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * This method is executed once when initialising the controller\n\t\t */\n\t\tonInit: function() {\n\t\t\tthis.oRouter = sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\tthis.oRouter.getTarget(\"datafields\").attachDisplay(jQuery.proxy(this.handleRouteMatched, this));\n\t\t\tthis.setTooltips();\n\t\t},\n\t\t\n\t\thandleRouteMatched: function(oEvent) {\n\n\t\t},\n\t\t\n\t\tonShowFieldDetails: function(oEvent) {\n\t\t\tBaseController.FieldId = oEvent.getSource().data(\"field\");\n\t\t\tthis.getRouter().navTo(\"fieldDetail\", {id: BaseController.FieldId});\n\t\t},\n\t\t/**\n\t\t * Handle the creation of a new data source \n\t\t */\n\t\t onAddDataField: function(oEvent) {\n\t\t \t\n\t\t \tvar oView = this.getView();\n\t\t \t\n\t\t \t// Set flag to indicate that a new source will be created\n\t\t  \tthis.getRouter().navTo(\"fieldDetail\", {id: \"NEW\"});\n\t\t \t\n\t\t \t/*\n\t\t\tvar newLine = {\n\t\t\t\tId: '99999',\n\t\t\t\tTechnicalType: \"CHOOSE\",\n\t\t\t\tUniqueIdentifier: false,\n\t\t\t\tMultipleValues: false,\n\t\t\t\tActive: true,\n\t\t\t\tLangu: \"EN\",\n\t\t\t\tDescription: \"New field\"\n\t\t\t};\n\t\t\tvar oModel = this.getModel();\n\t\t\tvar that = this;\n\t\t\toModel.create(\"/FieldSet\", newLine,\n\t\t\t{\n\t\t\t\tsuccess: function(response) {\n\t\t\t\t\tthat.handleCreatefieldSuccess(response);\n\t\t\t\t},\n\t\t\t\terror: that.handleCreatefieldError\n\t\t\t});\n\t\t\t*/\n\t\t },\n\t\t /**\n\t\t  * Handle the successfull creation of a new source\n\t\t  */\n\t\t  handleCreatefieldSuccess: function (response) {\n\t\t  \tBaseController.FieldId = response.Id;\n\t\t  \tthis.getRouter().navTo(\"fieldDetail\", {id: BaseController.FieldId});\n\t\t  },\n\t\t /**\n\t\t  * Handle the successfull creation of a new source\n\t\t  */\n\t\t  handleCreatesourceError: function (response) {\n\t\t  \t\n\t\t  },\n\n\t\t/**\n\t\t * Delete a field\n\t\t */\n\t\tonDeleteField: function(oEvent) {\n\t\t\tthis._deleteRow(oEvent);\n\t\t},\n\t\t\n\t\t\n\t\t/* =========================================================== */\n\t\t/* Internal methods                                            */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * This method sets the tooltips for the column headers\n\t\t */\n\t\t setTooltips: function() {\n\t\t \tvar oView = this.getView();\n\t\t \tvar oBundle = this.getResourceBundle();\n\t\t \t// var sMsg = oBundle.getText(\"yoMsg\", [sRecipient]); example syntax for passing parameters\n\t\t \t\n\t\t \t\n\t\t \tvar oUnique = oView.byId(\"FieldsColumnUnique\");\n\t\t \tvar sUnique = oBundle.getText(\"FieldsColumnUniqueTooltip\");\n\t\t\toUnique.setTooltip(sUnique);\n\t\t\t\n\t\t \tvar oMultiple = oView.byId(\"FieldsColumnMultiple\");\n\t\t \tvar sMultiple = oBundle.getText(\"FieldsColumnMultipleTooltip\");\n\t\t\toMultiple.setTooltip(sMultiple);\n\t\t\t\n\t\t\tvar oAddButton = oView.byId(\"AddDataField\");\n\t\t \tvar sAddButton = oBundle.getText(\"AddButtonTooltip\");\n\t\t\toAddButton.setTooltip(sAddButton);\n\t\t }\n\t});\n}, /* bExport= */ true);",
		"gdprcockpit/view/Splash.view.xml": "<mvc:View\n\txmlns:core=\"sap.ui.core\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\"\n\tcontrollerName=\"gdprcockpit.controller.Splash\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\"\n\t>\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"GDPR Cockpit\">\n\t\t\t\t<content>\n\t\t\t\t\t<Panel>\n\t\t\t\t\t\t<VBox alignItems=\"Center\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://business-by-design\" size=\"12rem\" alt=\"GDPR cockpit icon\" color=\"#555555\" />\n\t\t\t\t\t\t\t\t<Text text=\"Please choose a page on the left side\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</VBox>\n\t\t\t\t\t</Panel>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"gdprcockpit/view/MaintainDescriptions.view.xml": "<mvc:View\n\txmlns:core=\"sap.ui.core\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\"\n\tcontrollerName=\"gdprcockpit.controller.MaintainDescriptions\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\"\n\txmlns:gdpr=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\"\n\txmlns:semantic=\"sap.m.semantic\">\n\t<semantic:DetailPage\n\t\tid=\"descriptionsPage\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"true\"\n\t\ttitle=\"{i18n>pageDescriptions}\" >\n\t\t<semantic:content>\n\t\t\t<Table\n\t\t\t\twidth=\"100%\"\n\t\t\t\tid=\"DescriptionTable\"\n\t\t\t\tnoDataText=\"No data\"\n\t\t\t\tmode=\"None\"\n\t\t\t\tshowSeparators=\"All\"\n\t\t\t\titems=\"{path: '/ObjectDescriptionSet', templateShareable:false}\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar width=\"100%\" height=\"auto\" design=\"Auto\" visible=\"false\" enabled=\"true\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Label text=\"Label\" design=\"Standard\" width=\"100%\" required=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Title text=\"\" titleStyle=\"Auto\" id=\"DescriptionTableTitle\" width=\"auto\" textAlign=\"Begin\" visible=\"true\"/>\n\t\t\t\t\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t\t\t\t\t<Button id=\"AddDescription\" text=\"\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddDescription\" />\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" >\n\t\t\t\t\t\t\t<Text text=\"{i18n>DescriptionColumnId}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" >\n\t\t\t\t\t\t\t<Text text=\"{i18n>DescriptionColumnDescription}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" >\n\t\t\t\t\t\t\t<Text text=\"{i18n>ColumnDelete}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<Text text=\"{ObjectId}\" />\n\t\t\t\t\t\t\t<Input value=\"{Description}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://delete\" press=\"onDeleteDescription\" gdpr:description=\"{ObjectId}\" />\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t</semantic:content>\n\t</semantic:DetailPage>\n</mvc:View>",
		"gdprcockpit/view/DataVault.view.xml": "<mvc:View\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\tcontrollerName=\"gdprcockpit.controller.DataVault\"\n\txmlns=\"sap.m\"\n\txmlns:form=\"sap.ui.layout.form\"\n\txmlns:semantic=\"sap.m.semantic\"\n\txmlns:core=\"sap.ui.core\">\n\t<semantic:DetailPage\n\t\tid=\"vaultPage\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\ttitle=\"{i18n>pageVault}\" >\n\t\t<semantic:content>\n\t\t\t<VBox\n\t\t\t\talignItems=\"Stretch\"\n\t\t\t\tdirection=\"Column\"\n\t\t\t\tfitContainer=\"false\"\n\t\t\t\tjustifyContent=\"Start\"\n\t\t\t\trenderType=\"Div\"\n\t\t\t\tvisible=\"true\"\n\t\t\t\tdisplayInline=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<Panel id=\"query\" headerText=\"{i18n>VaultQuery}\" expandable=\"true\" expanded=\"true\" expandAnimation=\"true\">\n\t\t\t\t\t\t<form:SimpleForm\n\t\t\t\t\t\t\tlayout=\"ResponsiveGridLayout\"\n\t\t\t\t\t\t\tcolumnsXL=\"2\"\n\t\t\t\t\t\t\tcolumnsL=\"2\"\n\t\t\t\t\t\t\tcolumnsM=\"2\">\n\t\t\t\t\t\t\t<core:Title />\n\t\t\t\t\t\t\t<Label text=\"{i18n>VaultQueryUser}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<Input id=\"username\" value=\"{Username}\" enabled=\"false\" visible=\"true\" />\n\t\t\t\t\t\t\t<Text id=\"userFullname\" text=\"{FullName}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"{i18n>VaultQuerySource}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<ComboBox\n\t\t\t\t\t\t\t\t\tid=\"sourceSelector\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"{i18n>SourceSelect}\"\n\t\t\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\t\t\t\titems=\"{/SourceSet}\"\n\t\t\t\t\t\t\t\t\tchange=\"onSelectSource\"\n\t\t\t\t\t\t\t\t\tselectionChange=\"onSelectSource\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem text=\"{Name}\" key=\"{SrcId}\" additionalText=\"{SrcId}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t<Label text=\"{i18n>VaultQueryField}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<ComboBox\n\t\t\t\t\t\t\t\t\tid=\"fieldSelector\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"{i18n>QueryFieldSelect}\"\n\t\t\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\t\t\t\titems=\"{/FieldSet}\"\n\t\t\t\t\t\t\t\t\tchange=\"onSelectField\"\n\t\t\t\t\t\t\t\t\tselectionChange=\"onSelectField\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem text=\"{Name}\" key=\"{Id}\" additionalText=\"{Id}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Label text=\"{i18n>VaultQueryValue}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t<SearchField id=\"queryfieldvalue\" search=\"onVaultQuery\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<core:Title />\n\t\t\t\t\t\t\t<Button id=\"VaultQuerySearch\" text=\"Search data vault\" icon=\"sap-icon://search\" iconFirst=\"true\" press=\"onVaultQuery\" />\n\t\t\t\t\t\t</form:SimpleForm>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t\n\t\t\t\t\t<Panel id=\"result\" headerText=\"{i18n>VaultResult}\" expandable=\"true\" expanded=\"false\" expandAnimation=\"true\">\n\t\t\t\t\t\t<mvc:XMLView viewName=\"gdprcockpit.view.VaultList\" id=\"vaultList\" />\n\t\t\t\t\t\t<!--<Table\n\t\t\t\t\t\t\tid=\"vaultentitycontent\"\n\t\t\t\t\t\t\tmode=\"SingleSelectMaster\"\n\t\t\t\t\t\t\titemPress=\"onSelectVaultEntity\"\n\t\t\t\t\t\t\tnoDataText=\"No data\" showSeparators=\"All\" growing=\"true\" growingThreshold=\"20\" growingScrollToLoad=\"true\"\n\t\t\t\t\t\t\titems=\"{/VaultEntitySet}\">\n\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Phone\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>SourceName}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>VaultEntityId}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>VaultColumnField}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Phone\" demandPopin=\"true\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>VaultIdentifierValue}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>VaultEntityCreationdate}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>VaultEntityRetentiondate}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<ObjectIdentifier title=\"{Sourcename}\" titleActive=\"false\" visible=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{EntityId}\" />\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{Identifierfield1}\" width=\"auto\" textAlign=\"Begin\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{Identifiervalue1}\" width=\"auto\" textAlign=\"Begin\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{\n\t\t\t\t\t\t\t\t\t\t\tpath: 'CreationDate',\n\t\t\t\t\t\t\t\t\t\t\ttype: 'sap.ui.model.type.Date',\n\t\t\t\t\t\t\t\t\t\t\tformatOptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tpattern: 'dd MMM yyyy'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\" width=\"auto\" textAlign=\"Begin\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{\n\t\t\t\t\t\t\t\t\t\t\tpath: 'RetentionDate',\n\t\t\t\t\t\t\t\t\t\t\ttype: 'sap.ui.model.type.Date',\n\t\t\t\t\t\t\t\t\t\t\tformatOptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tpattern: 'dd MMM yyyy'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\" width=\"auto\" textAlign=\"Begin\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Table>-->\n\t\t\t\t\t</Panel>\n\t\t\t\t</items>\n\t\t\t</VBox>\n\t\t</semantic:content>\n\t</semantic:DetailPage>\n</mvc:View>",
		"gdprcockpit/view/DataFields.view.xml": "<mvc:View \n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:core=\"sap.ui.core\"\n\tcontrollerName=\"gdprcockpit.controller.DataFields\"\n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\"\n\txmlns:gdpr=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\">\n\t\n\t<semantic:DetailPage\n\t\tid=\"page\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\ttitle=\"{i18n>pageFields}\">\n\t\t<semantic:content>\n\t\t\t<Table\n\t\t\t\twidth=\"100%\"\n\t\t\t\tnoDataText=\"No data\"\n\t\t\t\tmode=\"None\"\n\t\t\t\tshowSeparators=\"All\"\n\t\t\t\tgrowing=\"false\"\n\t\t\t\tgrowingThreshold=\"20\"\n\t\t\t\tgrowingScrollToLoad=\"true\"\n\t\t\t\titems=\"{path: '/FieldSet', templateShareable:false}\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar width=\"100%\" height=\"auto\" design=\"Auto\" visible=\"false\" enabled=\"true\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Label text=\"Label\" design=\"Standard\" width=\"100%\" required=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<!--<Title text=\"Data fields (3)\" titleStyle=\"Auto\" width=\"auto\" textAlign=\"Begin\" visible=\"true\"/>-->\n\t\t\t\t\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t\t\t\t\t<!--<Button text=\"\" type=\"Transparent\" icon=\"sap-icon://sort\" iconFirst=\"true\" press=\"onSortDatafield\"\n\t\t\t\t\t\t\t\ticonDensityAware=\"false\"/>\n\t\t\t\t\t\t\t<Button text=\"\" type=\"Transparent\" icon=\"sap-icon://filter\" iconFirst=\"true\" press=\"onFilterDatafield\"\n\t\t\t\t\t\t\t\ticonDensityAware=\"false\"/>-->\n\t\t\t\t\t\t\t<Button id=\"AddDataField\" text=\"\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddDataField\" />\n\t\t\t\t\t\t\t<!--<Button text=\"show messages\" press=\"_onShowMessages\"  />-->\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" >\n\t\t\t\t\t\t\t<Text text=\"{i18n>ColumnName}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" >\n\t\t\t\t\t\t\t<Text text=\"{i18n>FieldsColumnDescription}\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Tablet\">\n\t\t\t\t\t\t\t<Text text=\"{i18n>FieldsColumnTechnicaltype}\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Desktop\" width=\"4rem\" >\n\t\t\t\t\t\t\t<Text id=\"FieldsColumnUnique\" text=\"{i18n>FieldsColumnUnique}\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Desktop\" width=\"6rem\" >\n\t\t\t\t\t\t\t<Text id=\"FieldsColumnMultiple\" text=\"{i18n>FieldsColumnMultiplevalues}\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Desktop\" width=\"4rem\">\n\t\t\t\t\t\t\t<Text text=\"{i18n>FieldsColumnActive}\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" width=\"3rem\" >\n\t\t\t\t\t\t\t<Text text=\"{i18n>ColumnDetails}\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Desktop\" width=\"3rem\" >\n\t\t\t\t\t\t\t<Text text=\"{i18n>ColumnDelete}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<Input value=\"{Name}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t\t\t<Input value=\"{Description}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tselectedKey=\"{path: 'TechnicalType'}\"\n\t\t\t\t\t\t\t\tenabled=\"{InputAllowed}\"\n\t\t\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\t\t\tvalueState=\"None\"\n\t\t\t\t\t\t\t\tmaxWidth=\"100%\"\n\t\t\t\t\t\t\t\tshowSecondaryValues=\"false\"\n\t\t\t\t\t\t\t\tchange=\"onChange\"\n\t\t\t\t\t\t\t\titems=\"{path: '/TechnicalTypeSet', templateShareable:false}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{DataType}\" text=\"{Description}\" additionalText=\"{DataType}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Switch state=\"{UniqueIdentifier}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t\t\t<Switch state=\"{MultipleValues}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t\t\t<Switch state=\"{Active}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t\t\t<!--<Button icon=\"sap-icon://edit\" press=\"onShowFieldDetails\" gdpr:field=\"{Id}\" />-->\n\t\t\t\t\t\t\t<FlexBox>\n\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://edit\" press=\"onShowFieldDetails\" visible=\"{InputAllowed}\" gdpr:field=\"{Id}\" />\n\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://display\" press=\"onShowFieldDetails\" visible=\"{=${InputAllowed}!==true}\" gdpr:field=\"{Id}\" />\n\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://delete\" press=\"onDeleteField\" enabled=\"{InputAllowed}\" />\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t<content>\n\t\t\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t\t\t<Button text=\"Add a new field\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddDataField\" />\n\t\t\t\t\t<!--<Button text=\"show messages\" press=\"_onShowMessages\"  />-->\n\t\t\t\t</content>\n\t\t\t</Toolbar>\n\t\t</semantic:content>\n\t</semantic:DetailPage>\n</mvc:View>",
		"gdprcockpit/view/DataFieldDetail.view.xml": "<mvc:View\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\"\n\txmlns:form=\"sap.ui.layout.form\"\n\txmlns:core=\"sap.ui.core\"\n\tcontrollerName=\"gdprcockpit.controller.DataFieldDetail\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<semantic:DetailPage\n\t\tid=\"page\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"true\"\n\t\ttitle=\"{i18n>pageFieldDetail}: {Name}\">\n\t\t<semantic:content>\n\t\t\t<form:SimpleForm>\n\t\t\t\t<Label text=\"{i18n>FieldId}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t<Text text=\"{Id}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\n\t\t\t\t<Label text=\"{i18n>ColumnName}\" class=\"sapUiTinyMarginTopBottom\" required=\"true\" />\n\t\t\t\t<Input value=\"{Name}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t\n\t\t\t\t<Label text=\"{i18n>FieldsColumnDescription}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t<Input value=\"{Description}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t<Label text=\"{i18n>FieldsColumnTechnicaltype}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t<Select\n\t\t\t\t\tselectedKey=\"{path: 'TechnicalType'}\"\n\t\t\t\t\tenabled=\"{InputAllowed}\"\n\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\tvalueState=\"None\"\n\t\t\t\t\tmaxWidth=\"100%\"\n\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\titems=\"{oData>/TechnicalTypeSet}\"\n\t\t\t\t\tchange=\"onChange\">\n\t\t\t\t\t<items>\n\t\t\t\t\t\t<core:ListItem key=\"{oData>DataType}\" text=\"{oData>Description}\" additionalText=\"{oData>DataType}\"/>\n\t\t\t\t\t</items>\n\t\t\t\t</Select>\n\t\t\t\t\n\t\t\t\t<Label text=\"{i18n>FieldsColumnUniqueTooltip}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t<Switch state=\"{UniqueIdentifier}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\n\t\t\t\t<Label text=\"{i18n>FieldsColumnMultipleTooltip}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t<Switch state=\"{MultipleValues}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\n\t\t\t\t<Label text=\"{i18n>FieldsColumnActive}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t<Switch state=\"{Active}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t</form:SimpleForm>\n\t\t</semantic:content>\n\t\t<semantic:saveAction>\n\t\t\t<semantic:SaveAction id=\"saveNew\" visible=\"false\" press=\"onSaveNewField\" />\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction id=\"cancelNew\" visible=\"false\" press=\"onCancelNewField\" />\n\t\t</semantic:cancelAction>\n\t\t<semantic:negativeAction>\n\t\t\t<semantic:NegativeAction id=\"deleteField\" visible=\"true\" text=\"{i18n>Delete}\" press=\"onDeleteField\" enabled=\"{InputAllowed}\" />\n\t\t</semantic:negativeAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"gdprcockpit/view/VaultList.view.xml": "<mvc:View\n\txmlns:core=\"sap.ui.core\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\"\n\tcontrollerName=\"gdprcockpit.controller.VaultList\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Table\n\t\tid=\"vaultentitycontent\"\n\t\tmode=\"SingleSelectMaster\"\n\t\titemPress=\"onSelectVaultEntity\"\n\t\tnoDataText=\"No data\" showSeparators=\"All\" growing=\"true\" growingThreshold=\"20\" growingScrollToLoad=\"true\"\n\t\titems=\"{/VaultEntitySet}\">\n\t\t<columns>\n\t\t\t<Column minScreenWidth=\"Phone\" mergeDuplicates=\"false\">\n\t\t\t\t<Text text=\"{i18n>SourceName}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column minScreenWidth=\"Tablet\">\n\t\t\t\t<Text text=\"{i18n>VaultEntityId}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\">\n\t\t\t\t<Text text=\"{i18n>VaultColumnField}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column width=\"auto\" hAlign=\"Left\" vAlign=\"Top\" minScreenWidth=\"Phone\" demandPopin=\"true\" popinDisplay=\"Inline\">\n\t\t\t\t<Text text=\"{i18n>VaultIdentifierValue}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\">\n\t\t\t\t<Text text=\"{i18n>VaultEntityCreationdate}\"/>\n\t\t\t</Column>\n\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" popinDisplay=\"Inline\">\n\t\t\t\t<Text text=\"{i18n>VaultEntityRetentiondate}\"/>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<ObjectIdentifier title=\"{Sourcename}\" titleActive=\"false\" visible=\"true\"/>\n\t\t\t\t\t<Text text=\"{EntityId}\" />\n\t\t\t\t\t<Text text=\"{Identifierfield1}\" width=\"auto\" textAlign=\"Begin\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t<Text text=\"{Identifiervalue1}\" width=\"auto\" textAlign=\"Begin\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t<Text text=\"{\n\t\t\t\t\t\tpath: 'CreationDate',\n\t\t\t\t\t\ttype: 'sap.ui.model.type.Date',\n\t\t\t\t\t\tformatOptions: {\n\t\t\t\t\t\t\tpattern: 'dd MMM yyyy'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\" width=\"auto\" textAlign=\"Begin\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t<Text text=\"{\n\t\t\t\t\t\tpath: 'RetentionDate',\n\t\t\t\t\t\ttype: 'sap.ui.model.type.Date',\n\t\t\t\t\t\tformatOptions: {\n\t\t\t\t\t\t\tpattern: 'dd MMM yyyy'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\" width=\"auto\" textAlign=\"Begin\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</mvc:View>",
		"gdprcockpit/view/App.view.xml": "<mvc:View\n\t\tcontrollerName=\"gdprcockpit.controller.App\"\n\t\txmlns:semantic=\"sap.m.semantic\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\tdisplayBlock=\"true\"\n\t\tbusy=\"{appView>/busy}\"\n\t\tbusyIndicatorDelay=\"{appView>/delay}\"\n\t\txmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\" />\n</mvc:View>",
		"gdprcockpit/view/DsrList.view.xml": "<mvc:View \n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:core=\"sap.ui.core\"\n\tcontrollerName=\"gdprcockpit.controller.DsrList\"\n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\">\n\t\n\t<semantic:DetailPage\n\t\tid=\"page\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\ttitle=\"{i18n>pageDsrList}\">\n\t\t<semantic:content>\n\t\t\t<Table\n\t\t\t\twidth=\"100%\"\n\t\t\t\tnoDataText=\"No data\"\n\t\t\t\tmode=\"SingleSelectMaster\"\n\t\t\t\titemPress=\"onDsrSelect\"\n\t\t\t\tshowSeparators=\"All\"\n\t\t\t\tgrowing=\"false\"\n\t\t\t\tgrowingThreshold=\"20\"\n\t\t\t\tgrowingScrollToLoad=\"true\"\n\t\t\t\titems=\"{path: '/DSRSet', templateShareable:false}\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar width=\"100%\" height=\"auto\" design=\"Auto\" visible=\"false\" enabled=\"true\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Label text=\"Label\" design=\"Standard\" width=\"100%\" required=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t\t\t\t\t<Button id=\"AddDSR\" text=\"\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddDsr\" />\n\t\t\t\t\t\t\t<!--<Button text=\"show messages\" press=\"_onShowMessages\"  />-->\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Text text=\"{i18n>ColumnDsrId}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Text text=\"{i18n>DSRColumnIdentifierField}\" />\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Text text=\"{i18n>DSRColumnIdentifierValue}\" />\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Text text=\"{i18n>DSRColumnType}\" />\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Text text=\"{i18n>DSRColumnCreationDate}\" />\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<Text text=\"{DsrId}\" />\n\t\t\t\t\t\t\t<Text text=\"{FieldName}\" />\n\t\t\t\t\t\t\t<Text text=\"{Value}\" />\n\t\t\t\t\t\t\t<Text text=\"{RequestTypeDescription}\" />\n\t\t\t\t\t\t\t<Text text=\"{\n\t\t\t\t\t\t\t\tpath: 'CreationDate',\n\t\t\t\t\t\t\t\ttype: 'sap.ui.model.type.Date',\n\t\t\t\t\t\t\t\tformatOptions: {\n\t\t\t\t\t\t\t\t\tpattern: 'dd MMM yyyy'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\" />\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t<content>\n\t\t\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t\t\t<Button text=\"Add a new request\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddDsr\" />\n\t\t\t\t\t<!--<Button text=\"show messages\" press=\"_onShowMessages\"  />-->\n\t\t\t\t</content>\n\t\t\t</Toolbar>\n\t\t</semantic:content>\n\t</semantic:DetailPage>\n</mvc:View>",
		"gdprcockpit/view/NewDescriptionKey.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t<Popover\n\t\ttitle=\"{i18n>newdescriptonkeytitle}\"\n\t\tclass=\"sapUiContentPadding\"\n\t\tplacement=\"Bottom\">\n\t\t<Input id=\"newdescription\" submit=\"newDescriptionEntered\" />\n\t\t<Button text=\"{i18n>keyentered}\" press=\"newDescriptionEntered\" />\n\t</Popover>\n</core:FragmentDefinition>",
		"gdprcockpit/view/MessagePopover.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t<MessagePopover\n\t\titems=\"{message>/}\"\n\t\tinitiallyExpanded=\"true\">\n\t\t<MessagePopoverItem\n\t\t\ttype=\"{message>type}\"\n\t\t\ttitle=\"{message>message}\"\n\t\t\tsubtitle=\"{message>additionalText}\"\n\t\t\tdescription=\"{message>description}\" />\n\t</MessagePopover>\n</core:FragmentDefinition>",
		"gdprcockpit/view/SourceUsers.view.xml": "<mvc:View\n\txmlns:core=\"sap.ui.core\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\"\n\tcontrollerName=\"gdprcockpit.controller.SourceUsers\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Table width=\"100%\" noDataText=\"No data\" mode=\"None\" showSeparators=\"All\" growing=\"true\" growingThreshold=\"20\" growingScrollToLoad=\"true\"\n\t\titems=\"{SourceToUsers}\">\n\t\t<infoToolbar/>\n\t\t<headerToolbar>\n\t\t\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t<content>\n\t\t\t\t\t<Title text=\"{i18n>SourceUsersTableTitle}\" titleStyle=\"Auto\" width=\"auto\" textAlign=\"Begin\" visible=\"true\"/>\n\t\t\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t\t\t<Button id=\"AddSourceUser\" text=\"\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddSourceUser\" />\n\t\t\t\t</content>\n\t\t\t</Toolbar>\n\t\t</headerToolbar>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<Text text=\"{i18n>Userid}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<Text text=\"{i18n>Fullname}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<Text text=\"{i18n>UserPermission}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column hAlign=\"Left\" vAlign=\"Top\" >\n\t\t\t\t\t<Text text=\"{i18n>ColumnDelete}\"/>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem>\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"{Username}\" />\n\t\t\t\t\t<Text text=\"{Name}\" />\n\t\t\t\t\t<Select\n\t\t\t\t\t\tselectedKey=\"{path: 'UserActivity'}\"\n\t\t\t\t\t\tenabled=\"{InputAllowed}\"\n\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\tmaxWidth=\"100%\"\n\t\t\t\t\t\tchange=\"onChange\"\n\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\titems=\"{\n\t\t\t\t\t\t\t\tpath: '/ObjectDescriptionSet',\n\t\t\t\t\t\t\t\tfilters: [ { path: 'ObjectType', operator: 'EQ', value1: 'ACTIV_AUTH' } ],\n\t\t\t\t\t\t\t\ttemplateShareable:false }\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:ListItem key=\"{ObjectId}\" text=\"{Description}\" additionalText=\"{ObjectId}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Button icon=\"sap-icon://delete\" press=\"onDeleteUser\" />\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t<content>\n\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t<Button text=\"Add a new user\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddSourceUser\" />\n\t\t</content>\n\t</Toolbar>\n</mvc:View>",
		"gdprcockpit/view/Dsr.view.xml": "<mvc:View\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\"\n\txmlns:form=\"sap.ui.layout.form\"\n\txmlns:l=\"sap.ui.layout\"\n\txmlns:core=\"sap.ui.core\"\n\tcontrollerName=\"gdprcockpit.controller.Dsr\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<semantic:DetailPage\n\t\tid=\"page\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"true\"\n\t\ttitle=\"{i18n>pageDsrDetail}: {DsrId}\">\n\t\t<semantic:content>\n\t\t\t<form:Form editable=\"true\">\n\t\t\t\t<form:layout>\n\t\t\t\t\t<form:ResponsiveGridLayout\n\t\t\t\t\t\tlabelSpanXL=\"4\"\n\t\t\t\t\t\tlabelSpanL=\"4\"\n\t\t\t\t\t\tlabelSpanM=\"4\"\n\t\t\t\t\t\tlabelSpanS=\"12\"\n\t\t\t\t\t\tadjustLabelSpan=\"false\"\n\t\t\t\t\t\temptySpanXL=\"0\"\n\t\t\t\t\t\temptySpanL=\"0\"\n\t\t\t\t\t\temptySpanM=\"0\"\n\t\t\t\t\t\temptySpanS=\"0\"\n\t\t\t\t\t\tcolumnsXL=\"3\"\n\t\t\t\t\t\tcolumnsL=\"2\"\n\t\t\t\t\t\tcolumnsM=\"2\"\n\t\t\t\t\t\tsingleContainerFullSize=\"false\" />\n\t\t\t\t\t</form:layout>\n\t\t\t\t<form:formContainers>\n\t\t\t\t\t<form:FormContainer>\n\t\t\t\t\t\t<form:formElements>\n\t\t\t\t\t\t\t<form:FormElement label=\"{i18n>DsrId}\">\n\t\t\t\t\t\t\t\t<form:fields>\n\t\t\t\t\t\t\t\t\t<Text text=\"{DsrId}\" />\n\t\t\t\t\t\t\t\t</form:fields>\n\t\t\t\t\t\t\t</form:FormElement>\n\t\t\t\t\t\t\t<form:FormElement label=\"Request type\">\n\t\t\t\t\t\t\t\t<form:fields>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tchange=\"onChange\"\n\t\t\t\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\t\t\t\t\tenabled=\"{InputAllowed}\"\n\t\t\t\t\t\t\t\t\t\tselectedKey=\"{RequestType}\"\n\t\t\t\t\t\t\t\t\t\titems=\"{\n\t\t\t\t\t\t\t\t\t\t\tpath: 'oData>/ObjectDescriptionSet',\n\t\t\t\t\t\t\t\t\t\t\tfilters: [ { path: 'ObjectType', operator: 'EQ', value1: 'ZGDPR_DE_DSR_TYPE' } ],\n\t\t\t\t\t\t\t\t\t\t\ttemplateShareable:false }\">\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<core:ListItem text=\"{oData>Description}\" key=\"{oData>ObjectId}\" additionalText=\"{oData>ObjectId}\"/>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</form:fields>\n\t\t\t\t\t\t\t\t<Button text=\"Edit types\" enabled=\"{InputAllowed}\" icon=\"sap-icon://edit\" press=\"onMaintainRequestTypes\" />\n\t\t\t\t\t\t\t</form:FormElement>\n\t\t\t\t\t\t\t<form:FormElement label=\"Creation date\">\n\t\t\t\t\t\t\t\t<form:fields>\n\t\t\t\t\t\t\t\t\t<Text text=\"{\n\t\t\t\t\t\t\t\t\t\tpath: 'CreationDate',\n\t\t\t\t\t\t\t\t\t\ttype: 'sap.ui.model.type.Date',\n\t\t\t\t\t\t\t\t\t\tformatOptions: {\n\t\t\t\t\t\t\t\t\t\t\tpattern: 'dd MMM yyyy'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\" />\n\t\t\t\t\t\t\t\t</form:fields>\n\t\t\t\t\t\t\t</form:FormElement>\n\t\t\t\t\t\t\t<form:FormElement label=\"Request status\">\n\t\t\t\t\t\t\t\t<form:fields>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tchange=\"onChange\"\n\t\t\t\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\t\t\t\t\tenabled=\"{InputAllowed}\"\n\t\t\t\t\t\t\t\t\t\tselectedKey=\"{RequestStatus}\"\n\t\t\t\t\t\t\t\t\t\titems=\"{\n\t\t\t\t\t\t\t\t\t\t\tpath: 'oData>/ObjectDescriptionSet',\n\t\t\t\t\t\t\t\t\t\t\tfilters: [ { path: 'ObjectType', operator: 'EQ', value1: 'ZGDPR_DE_DSR_STATUS' } ],\n\t\t\t\t\t\t\t\t\t\t\ttemplateShareable:false }\">\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<core:ListItem text=\"{oData>Description}\" key=\"{oData>ObjectId}\" additionalText=\"{oData>ObjectId}\"/>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</form:fields>\n\t\t\t\t\t\t\t\t<Button text=\"Edit statuses\" enabled=\"{InputAllowed}\" icon=\"sap-icon://edit\" press=\"onMaintainRequestStatuses\" />\n\t\t\t\t\t\t\t</form:FormElement>\n\t\t\t\t\t\t</form:formElements>\n\t\t\t\t\t</form:FormContainer>\n\t\t\t\t\t<form:FormContainer id=\"singleIdentity\">\n\t\t\t\t\t\t<form:formElements>\n\t\t\t\t\t\t\t<form:FormElement label=\"Identifying field\">\n\t\t\t\t\t\t\t\t<form:fields>\n\t\t\t\t\t\t\t\t\t<ComboBox\n\t\t\t\t\t\t\t\t\t\tselectedKey=\"{path: 'Field'}\"\n\t\t\t\t\t\t\t\t\t\tenabled=\"{InputAllowed}\"\n\t\t\t\t\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\t\t\t\t\tmaxWidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\t\t\t\t\titems=\"{path: 'oData>/FieldSet', templateShareable:false}\">\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{oData>Id}\" text=\"{oData>Name}\" additionalText=\"{oData>Id}\"/>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t</form:fields>\n\t\t\t\t\t\t\t</form:FormElement>\n\t\t\t\t\t\t\t<form:FormElement label=\"Identifier value\" class=\"sapUiTinyMarginTopBottom\">\n\t\t\t\t\t\t\t\t<form:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{Value}\" submit=\"onSaveNewDsr\" />\n\t\t\t\t\t\t\t\t</form:fields>\n\t\t\t\t\t\t\t</form:FormElement>\n\t\t\t\t\t\t</form:formElements>\n\t\t\t\t\t</form:FormContainer>\n\t\t\t\t</form:formContainers>\n\t\t\t</form:Form>\n\t\t\t<Panel id=\"identity\" expandable=\"true\" visible=\"false\" headerText=\"Identity\">\n\t\t\t\t<Table\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\tnoDataText=\"No data\"\n\t\t\t\t\tmode=\"Delete\"\n\t\t\t\t\tdelete=\"onDeleteIdentifier\"\n\t\t\t\t\tshowSeparators=\"All\"\n\t\t\t\t\tgrowing=\"false\"\n\t\t\t\t\tgrowingThreshold=\"20\"\n\t\t\t\t\tgrowingScrollToLoad=\"true\"\n\t\t\t\t\titems=\"{path: 'DsrToIdentity', templateShareable:false}\">\n\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t<Toolbar width=\"auto\" height=\"20px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t\t\t\t\t\t<Button id=\"AddIdentifier\" text=\"\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddIdentifier\" />\n\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t<columns>\n\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t<Text text=\"{i18n>DSRColumnIdentifierField}\" />\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t<Text text=\"{i18n>DSRColumnIdentifierValue}\" />\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</columns>\n\t\t\t\t\t<items>\n\t\t\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t<ComboBox\n\t\t\t\t\t\t\t\t\tselectedKey=\"{path: 'Field'}\"\n\t\t\t\t\t\t\t\t\tenabled=\"{InputAllowed}\"\n\t\t\t\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\t\t\t\tmaxWidth=\"100%\"\n\t\t\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\t\t\t\tchange=\"onChange\"\n\t\t\t\t\t\t\t\t\titems=\"{path: 'oData>/FieldSet', templateShareable:false}\">\n\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{oData>Id}\" text=\"{oData>Name}\" additionalText=\"{oData>Id}\"/>\n\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t<Input value=\"{Value}\" change=\"onChange\" />\n\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t</items>\n\t\t\t\t</Table>\n\t\t\t</Panel>\n\t\t\t<Panel id=\"vaultresults\" expandable=\"true\" visible=\"false\" headerText=\"Data vault\">\n\t\t\t\t<mvc:XMLView viewName=\"gdprcockpit.view.VaultList\" id=\"vaultList\" />\n\t\t\t</Panel>\n\t\t</semantic:content>\n\t\t<semantic:saveAction>\n\t\t\t<semantic:SaveAction id=\"saveNew\" visible=\"false\" press=\"onSaveNewDsr\" />\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction id=\"cancelNew\" visible=\"false\" press=\"onCancelNewDsr\" />\n\t\t</semantic:cancelAction>\n\t\t<semantic:negativeAction>\n\t\t\t<semantic:NegativeAction id=\"deleteDsr\" text=\"{i18n>Delete}\" press=\"onNavBack\" enabled=\"{InputAllowed}\" />\n\t\t</semantic:negativeAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"gdprcockpit/view/DataSources.view.xml": "<mvc:View\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\tcontrollerName=\"gdprcockpit.controller.DataSources\"\n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\"\n\txmlns:form=\"sap.ui.layout.form\"\n\txmlns:core=\"sap.ui.core\"\n\t>\n\t\n\t<semantic:DetailPage\n\t\tid=\"sourcePage\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\ttitle=\"{i18n>pageSources}: {Name}\" >\n\t\t<semantic:content>\n\t\t\t<VBox\n\t\t\t\talignItems=\"Stretch\"\n\t\t\t\tdirection=\"Column\"\n\t\t\t\tfitContainer=\"false\"\n\t\t\t\tjustifyContent=\"Start\"\n\t\t\t\trenderType=\"Div\"\n\t\t\t\tvisible=\"true\"\n\t\t\t\tdisplayInline=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<Panel id=\"select\" headerText=\"{i18n>SourceSelect}\" expandable=\"true\" expanded=\"true\" expandAnimation=\"true\">\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<ComboBox\n\t\t\t\t\t\t\t\t\tid=\"sourceSelector\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"{i18n>SourceSelect}\"\n\t\t\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\t\t\t\titems=\"{\n\t\t\t\t\t\t\t\t\t\tpath: '/SourceSet',\n\t\t\t\t\t\t\t\t\t\ttemplateShareable:false }\"\n\t\t\t\t\t\t\t\t\tchange=\"onSelectSource\"\n\t\t\t\t\t\t\t\t\tselectionChange=\"onSelectSource\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem text=\"{Name}\" key=\"{SrcId}\" additionalText=\"{SrcId}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t<ComboBox\n\t\t\t\t\t\t\t\t\tid=\"sourceTypeSelector\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"{i18n>SourceTypeSelector}\"\n\t\t\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\t\t\t\tchange=\"onSelectSourceType\"\n\t\t\t\t\t\t\t\t\tselectionChange=\"onSelectSourceType\"\n\t\t\t\t\t\t\t\t\tclass=\"sapUiSmallMarginBegin\"\n\t\t\t\t\t\t\t\t\titems=\"{\n\t\t\t\t\t\t\t\t\t\tpath: '/ObjectDescriptionSet',\n\t\t\t\t\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\t\t\t\t\t{ path: 'ObjectType', operator: 'EQ', value1: 'ZGDPR_DE_SRC_TYPE_ID' }\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\ttemplateShareable:false\n\t\t\t\t\t\t\t\t\t}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem text=\"{Description}\" key=\"{ObjectId}\" additionalText=\"{ObjectId}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t<Button id=\"AddDataSource\" text=\"{i18n>SourceNew}\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddDataSource\" class=\"sapUiSmallMarginBegin\" />\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel id=\"properties\" headerText=\"Characteristics\" expandable=\"true\" expanded=\"false\" expandAnimation=\"true\" backgroundDesign=\"Solid\">\n\t\t\t\t\t\t<form:SimpleForm>\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceId}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Text text=\"{SrcId}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>ColumnName}\" class=\"sapUiTinyMarginTopBottom\" required=\"true\" />\n\t\t\t\t\t\t\t\t<Input id=\"name\" value=\"{Name}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>FieldsColumnDescription}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Input id=\"description\" value=\"{Description}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceType}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tid=\"sourceTypeDisplay\"\n\t\t\t\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\t\t\t\t\tenabled=\"{InputAllowed}\"\n\t\t\t\t\t\t\t\t\t\tchange=\"onChange\"\n\t\t\t\t\t\t\t\t\t\tselectedKey=\"{Type}\"\n\t\t\t\t\t\t\t\t\t\titems=\"{\n\t\t\t\t\t\t\t\t\t\t\tpath: 'oData>/ObjectDescriptionSet',\n\t\t\t\t\t\t\t\t\t\t\tfilters: [ { path: 'ObjectType', operator: 'EQ', value1: 'ZGDPR_DE_SRC_TYPE_ID' } ],\n\t\t\t\t\t\t\t\t\t\t\ttemplateShareable:false }\">\n\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t<core:ListItem text=\"{oData>Description}\" key=\"{oData>ObjectId}\" additionalText=\"{oData>ObjectId}\"/>\n\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t<Button text=\"Maintain source types\" enabled=\"{InputAllowed}\" icon=\"sap-icon://edit\" press=\"onMaintainSourceTypes\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceOwner}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Input id=\"boname\" value=\"{BoName}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceOwner} e-mail\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Input id=\"bomail\" value=\"{BoMail}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceOwner} department\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Input id=\"bodepartment\" value=\"{BoDepartment}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceSupplier}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Input id=\"supplier\" value=\"{Supplier}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceSupplier} contact\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Input id=\"suppliercontact\" value=\"{SupplierContact}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceDocumentation}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Input id=\"documentation\" value=\"{Documentation}\" enabled=\"{InputAllowed}\" change=\"onChange\" submit=\"onSubmit\" />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceLegalRetentionDate}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Switch id=\"legalretentiondate\" state=\"{LegalRetentionDate}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceScore}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<RatingIndicator id=\"score\" value=\"{Score}\" enabled=\"{InputAllowed}\" maxValue=\"5\" iconSize=\"16px\" visualMode=\"Full\" change=\"onChange\" />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceStoredBySupplier}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Switch id=\"storedbysupplier\" state=\"{StoredBySupplier}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Label text=\"{i18n>SourceActive}\" class=\"sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t<Switch id=\"active\" state=\"{Active}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</form:SimpleForm>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel id=\"control\" width=\"100%\" headerText=\"Control\" expandable=\"true\" expanded=\"false\" expandAnimation=\"true\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<IconTabBar expandable=\"false\" expanded=\"true\" applyContentPadding=\"false\" backgroundDesign=\"Solid\" upperCase=\"false\" visible=\"true\"\n\t\t\t\t\t\t\t\tselectedKey=\"Ok\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<IconTabFilter icon=\"sap-icon://business-card\" iconColor=\"Default\" text=\"Fields\" count=\"\" design=\"Vertical\" showAll=\"false\"\n\t\t\t\t\t\t\t\t\t\ttextDirection=\"Inherit\" enabled=\"true\" visible=\"true\" iconDensityAware=\"false\">\n\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t<mvc:XMLView viewName=\"gdprcockpit.view.SourceFields\" id=\"sourcefields\" />\n\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t\t\t<IconTabFilter icon=\"sap-icon://hr-approval\" iconColor=\"Default\" text=\"Access management\" design=\"Vertical\" showAll=\"false\"\n\t\t\t\t\t\t\t\t\t\ttextDirection=\"Inherit\" enabled=\"true\" visible=\"true\" iconDensityAware=\"false\">\n\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t<mvc:XMLView viewName=\"gdprcockpit.view.SourceUsers\" id=\"sourceusers\" />\n\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<content/>\n\t\t\t\t\t\t\t</IconTabBar>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</Panel>\n\t\t\t\t</items>\n\t\t\t\t<layoutData/>\n\t\t\t</VBox>\n\t\t</semantic:content>\n\t\t<semantic:saveAction>\n\t\t\t<semantic:SaveAction id=\"saveNew\" visible=\"false\" press=\"onSaveNewSource\" />\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction id=\"cancelNew\" visible=\"false\" press=\"onCancelNewSource\" />\n\t\t</semantic:cancelAction>\n\t\t<semantic:negativeAction>\n\t\t\t<semantic:NegativeAction id=\"deleteSource\" visible=\"false\" text=\"{i18n>Delete}\" press=\"onDeleteSource\" enabled=\"{InputAllowed}\" />\n\t\t</semantic:negativeAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"gdprcockpit/view/Master.view.xml": "<mvc:View\n\t\tcontrollerName=\"gdprcockpit.controller.Master\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns:layout=\"sap.ui.layout\"\n\t\txmlns:core=\"sap.ui.core\"\n\t\txmlns=\"sap.m\"\n\t\txmlns:semantic=\"sap.m.semantic\"\n\t\txmlns:gdprcockpit=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\"\n\t\tclass=\"side-navigation\">\n\n\t<semantic:MasterPage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>appTitle} - {i18n>pageNavigation}\"\n\t\t\tnavButtonPress=\"onNavBack\"\n\t\t\tshowNavButton=\"false\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<Button icon=\"sap-icon://menu2\" text=\"{i18n>collapse}\" press=\"onToggleSideBar\" width=\"100%\" />\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\n\t\t<semantic:content>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<layout:Grid width=\"100%\" class=\"logogrid\" >\n\t\t\t\t<Image src=\"images/saplogo.png\" width=\"100%\" />\n\t\t\t\t<Image src=\"images/agre.png\" width=\"100%\" />\n\t\t\t</layout:Grid>\n\t\t\t<List\n\t\t\t\tid=\"list\"\n\t\t\t\titems=\"{\n\t\t\t\t\tpath: '/NavigationSet'\n\t\t\t\t}\"\n\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\"\n\t\t\t\tnoDataText=\"{masterView>/noDataText}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\"\n\t\t\t\tgrowing=\"true\"\n\t\t\t\tgrowingScrollToLoad=\"true\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\"\n\t\t\t\tselectionChange=\"onNavigationSelect\">\n\t\t\t\t<items>\n\t\t\t\t\t<StandardListItem\n\t\t\t\t\t\ttitle=\"{Text}\"\n\t\t\t\t\t\ticon=\"{Icon}\"\n\t\t\t\t\t\ticonDensityAware=\"false\"\n\t\t\t\t\t\ticonInset=\"false\"\n\t\t\t\t\t\tgdprcockpit:key=\"{Target}\" />\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\n\t</semantic:MasterPage>\n\n</mvc:View>",
		"gdprcockpit/view/SourceFields.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"gdprcockpit.controller.SourceFields\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Table width=\"100%\" noDataText=\"No data\" mode=\"None\" showSeparators=\"All\" growing=\"true\" growingThreshold=\"20\" growingScrollToLoad=\"true\"\n\t\titems=\"{path: 'SourceToField', parameters: {expand:'SourceFieldToField'}}\">\n\t\t<infoToolbar/>\n\t\t<headerToolbar>\n\t\t\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t\t\t<content>\n\t\t\t\t\t<Title text=\"{i18n>SourceFields}\" titleStyle=\"Auto\" width=\"auto\" textAlign=\"Begin\" visible=\"true\"/>\n\t\t\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t\t\t<Button id=\"AddSourceField\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddSourceField\" enabled=\"{InputAllowed}\" />\n\t\t\t\t</content>\n\t\t\t</Toolbar>\n\t\t</headerToolbar>\n\t\t<columns>\n\t\t\t<Column width=\"4rem\">\n\t\t\t\t<Text text=\"{i18n>FieldId}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<Text text=\"GDPR field\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<Text text=\"{i18n>FieldsColumnDescription}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<Text text=\"{i18n>FieldsColumnTechnicaltype}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column width=\"4rem\">\n\t\t\t\t<Text text=\"{i18n>FieldsColumnActive}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t</Column>\n\t\t\t<Column width=\"3rem\" >\n\t\t\t\t\t<Text text=\"{i18n>ColumnDelete}\"/>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem>\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"{SourceField}\" />\n\t\t\t\t\t<Select\n\t\t\t\t\t\tselectedKey=\"{path: 'Field'}\"\n\t\t\t\t\t\tenabled=\"{InputAllowed}\"\n\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\tmaxWidth=\"100%\"\n\t\t\t\t\t\tshowSecondaryValues=\"true\"\n\t\t\t\t\t\tchange=\"onChange\"\n\t\t\t\t\t\titems=\"{path: '/FieldSet', templateShareable:false}\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:ListItem key=\"{Id}\" text=\"{Name}\" additionalText=\"{Id}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Input value=\"{SourceFieldName}\" enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t<Text text=\"{path: 'SourceFieldToField/TechnicalTypeDescr'}\" width=\"auto\" maxLines=\"1\" wrapping=\"false\" textAlign=\"Begin\" textDirection=\"Inherit\"/>\n\t\t\t\t\t<Switch state=\"{SrcfldActive}\"  enabled=\"{InputAllowed}\" change=\"onChange\" />\n\t\t\t\t\t<Button icon=\"sap-icon://delete\" press=\"onDeleteField\" enabled=\"{InputAllowed}\" />\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n\t<Toolbar width=\"auto\" height=\"46px\" design=\"Transparent\" visible=\"true\" enabled=\"true\">\n\t\t<content>\n\t\t\t<ToolbarSpacer width=\"\"/>\n\t\t\t<Button text=\"Add a new source field\" type=\"Transparent\" icon=\"sap-icon://add\" iconFirst=\"true\" press=\"onAddSourceField\" enabled=\"{InputAllowed}\" />\n\t\t</content>\n\t</Toolbar>\n</mvc:View>",
		"gdprcockpit/localService/mockserver.js": "sap.ui.define([\n\t\t\"sap/ui/core/util/MockServer\"\n\t], function (MockServer) {\n\t\t\"use strict\";\n\n\t\tvar oMockServer,\n\t\t\t_sAppModulePath = \"gdprcockpit/\",\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Initializes the mock server.\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t\t * @public\n\t\t\t */\n\n\t\t\tinit : function () {\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\t\tsEntity = \"NavigationSet\",\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t\t// ensure there is a trailing slash\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\t\toMockServer = new MockServer({\n\t\t\t\t\trootUri : sMockServerUrl\n\t\t\t\t});\n\n\t\t\t\t// configure mock server with a delay of 1s\n\t\t\t\tMockServer.config({\n\t\t\t\t\tautoRespond : true,\n\t\t\t\t\tautoRespondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t\t});\n\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\n\t\t\t\t\tbGenerateMissingMockData : true\n\t\t\t\t});\n\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\n\t\t\t\t\t\taRequest.response = function(oXhr){\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Type\": \"text/plain;charset=utf-8\"}, sMessage);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t// handling the metadata error test\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Handling request errors\n\t\t\t\tif (sErrorParam) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toMockServer.start();\n\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t\t */\n\t\t\tgetMockServer : function () {\n\t\t\t\treturn oMockServer;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"gdprcockpit/model/models.js": "sap.ui.define([\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/Device\"\n\t], function (JSONModel, Device) {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\tcreateDeviceModel : function () {\n\t\t\t\tvar oModel = new JSONModel(Device);\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"gdprcockpit/model/formatter.js": "sap.ui.define([\n\t], function () {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Rounds the currency value to 2 digits\n\t\t\t *\n\t\t\t * @public\n\t\t\t * @param {string} sValue value to be formatted\n\t\t\t * @returns {string} formatted currency value with 2 digits\n\t\t\t */\n\t\t\tcurrencyValue : function (sValue) {\n\t\t\t\tif (!sValue) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t\t}\n\t\t};\n\n\t}\n);"
	}
});